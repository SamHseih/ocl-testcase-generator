package test.ThreeDimVarArray;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import program.ThreeDimVarArray;


public class ThreeDimVarArray_DCC_Test {
  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_ThreeDimVarArray_DCC_1")
  void testThreeDimVarArray_1() throws Exception {
    int[][][] Arg_1 = {
        {{-30119, -10104, 26045}, {-3497, -9918, 23895}, {11957, 27658, -8520},
            {17339, 14143, -23145}, {-2281, 14536, -7860}, {-7719, -27962, -13643},
            {12091, 3581, 8587}, {30336, 13719, 4469}, {-3819, 17292, -17222}},
        {{-28603, -24718, 10909}, {11809, 26009, 24006}, {19484, 6422, -18716},
            {3985, 12930, 15249}, {7387, 193, -29939}, {17549, 20101, -25491}, {-30845, 6041, -186},
            {29651, -20155, 18202}, {-30165, 13035, 28162}},
        {{3233, -31525, 3785}, {1899, -12746, 18864}, {29051, 6080, -16087}, {-28405, 10591, 5321},
            {22714, -19308, -6546}, {3987, 9882, 9682}, {-8940, 17315, -21669},
            {-23804, 20360, 21366}, {-5540, -30880, 21311}},
        {{17035, -30901, 18801}, {27895, -26102, 3423}, {-9035, 26354, 23034},
            {19676, -25901, -4352}, {-25977, -17499, -18845}, {17920, 17516, 14539},
            {18162, -11297, 27297}, {7210, -3375, -15624}, {-21765, 31156, -14043}},
        {{-1341, 26570, -12701}, {19270, -28769, 28448}, {-19347, 19408, 13640},
            {20436, -19683, 25324}, {13154, 25819, -23953}, {-16351, -2293, 10147},
            {11206, 5184, -29539}, {-28547, -23472, 14844}, {-20220, 31268, 6864}},
        {{343, 21991, 7056}, {14232, 6492, 7013}, {-26468, -4199, -5420}, {26712, -30108, 8099},
            {-30660, -22385, -32167}, {-19702, -30965, -4325}, {-10679, 23066, -9521},
            {-26342, -18312, -18927}, {-19310, 31864, 22919}},
        {{-8571, 995, -31849}, {26095, -22278, 7415}, {-849, -6174, 11905}, {-7764, -5704, -6664},
            {-22739, -29892, 26210}, {-13534, -7750, 4861}, {4721, -6402, 6326},
            {-21045, -24647, 16252}, {-2616, -26683, -4157}},
        {{28472, -24435, 19913}, {18500, -24708, -13929}, {-5120, 25532, -11788},
            {-8499, 18153, 11649}, {27313, -2932, -21738}, {-16598, -10106, 1808},
            {-1038, -11826, -20856}, {-392, -30301, -17806}, {15426, 29569, 16681}},
        {{-10842, 32714, 14436}, {5295, 29531, -31645}, {15589, -25742, 4047}, {13095, 32565, 6862},
            {-22742, -8621, 22038}, {-14788, -9700, -28834}, {10847, 9785, -16692},
            {28969, 28594, -24518}, {11534, -4054, 17494}},
        {{-27269, 7117, -23417}, {-21932, -1378, 31215}, {-12694, -10548, -2569},
            {19938, -25173, 25191}, {13689, 10025, 12774}, {-5265, 3726, -21979},
            {-29835, 16192, -30540}, {-11511, 360, 17465}, {-1891, -28939, 6498}}};
    assertEquals(
        "[[[-30119, -10104, 26045], [-3497, -9918, 23895], [11957, 27658, -8520], [17339, 14143, -23145], [-2281, 14536, -7860], [-7719, -27962, -13643], [12091, 3581, 8587], [30336, 13719, 4469], [-3819, 17292, -17222]], [[-28603, -24718, 10909], [11809, 26009, 24006], [19484, 6422, -18716], [3985, 12930, 15249], [7387, 193, -29939], [17549, 20101, -25491], [-30845, 6041, -186], [29651, -20155, 18202], [-30165, 13035, 28162]], [[3233, -31525, 3785], [1899, -12746, 18864], [29051, 6080, -16087], [-28405, 10591, 5321], [22714, -19308, -6546], [3987, 9882, 9682], [-8940, 17315, -21669], [-23804, 20360, 21366], [-5540, -30880, 21311]], [[17035, -30901, 18801], [27895, -26102, 3423], [-9035, 26354, 23034], [19676, -25901, -4352], [-25977, -17499, -18845], [17920, 17516, 14539], [18162, -11297, 27297], [7210, -3375, -15624], [-21765, 31156, -14043]], [[-1341, 26570, -12701], [19270, -28769, 28448], [-19347, 19408, 13640], [20436, -19683, 25324], [13154, 25819, -23953], [-16351, -2293, 10147], [11206, 5184, -29539], [-28547, -23472, 14844], [-20220, 31268, 6864]], [[343, 21991, 7056], [14232, 6492, 7013], [-26468, -4199, -5420], [26712, -30108, 8099], [-30660, -22385, -32167], [-19702, -30965, -4325], [-10679, 23066, -9521], [-26342, -18312, -18927], [-19310, 31864, 22919]], [[-8571, 995, -31849], [26095, -22278, 7415], [-849, -6174, 11905], [-7764, -5704, -6664], [-22739, -29892, 26210], [-13534, -7750, 4861], [4721, -6402, 6326], [-21045, -24647, 16252], [-2616, -26683, -4157]], [[28472, -24435, 19913], [18500, -24708, -13929], [-5120, 25532, -11788], [-8499, 18153, 11649], [27313, -2932, -21738], [-16598, -10106, 1808], [-1038, -11826, -20856], [-392, -30301, -17806], [15426, 29569, 16681]], [[-10842, 32714, 14436], [5295, 29531, -31645], [15589, -25742, 4047], [13095, 32565, 6862], [-22742, -8621, 22038], [-14788, -9700, -28834], [10847, 9785, -16692], [28969, 28594, -24518], [11534, -4054, 17494]], [[-27269, 7117, -23417], [-21932, -1378, 31215], [-12694, -10548, -2569], [19938, -25173, 25191], [13689, 10025, 12774], [-5265, 3726, -21979], [-29835, 16192, -30540], [-11511, 360, 17465], [-1891, -28939, 6498]]]",
        new ThreeDimVarArray(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_1_Exception")
  void testadd_1() {
    assertThrows(Exception.class, () -> {
      int[][][] inputarray_Arg_1 = {
          {{5657, 15296, 4242}, {2600, -27912, 28826}, {5871, 22437, 10301}, {28795, 27087, -22812},
              {-11939, 31195, 28717}},
          {{16202, 23721, 30134}, {-22830, -14068, -31961}, {13838, -3611, 21333},
              {14877, -11892, -32640}, {9611, 8315, 2852}},
          {{-9898, 17867, 11054}, {-5958, 21344, -29044}, {-1738, -29640, -21595},
              {14091, -6568, -28840}, {27859, 26846, 17456}}};
      int[][][] inputarray_self =
          {{{-23137, -30154}, {-8886, -30432}, {-18337, 23797}, {11997, -13519}, {-5179, -19634}},
              {{-16027, -20772}, {-20110, -1214}, {30200, -17069}, {-9265, -2164}, {6549, -14831}},
              {{-14342, -11719}, {-7544, -11690}, {-1991, -8222}, {9117, 12652}, {-1395, -12902}}};
      ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
      ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
      self.add(Arg_1).toString();
    });
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_2_Exception")
  void testadd_2() {
    assertThrows(Exception.class, () -> {
      int[][][] inputarray_Arg_1 = {
          {{-5787, -15280, -24992, 24252}, {-23136, 9132, -26555, 543},
              {6642, -14829, 1283, -20711}, {26652, 9498, 32048, -10976},
              {-17555, 30487, -13507, -24796}, {-18305, -5472, 638, 7500},
              {22256, 15921, 15362, -31095}, {-13588, -7051, 17406, -5095}},
          {{-23393, 28891, 30782, -5644}, {14483, 17842, 16580, 10225}, {-9617, 3553, 24152, 22946},
              {28144, -175, -16574, -9394}, {-12580, -27295, 26497, -25482},
              {22158, 12211, 7438, -30621}, {12202, 1104, 23045, -31342},
              {4809, -22118, 22566, 13798}}};
      int[][][] inputarray_self = {{{9039, 101, -31650, 20664}}, {{-9856, -11622, -13718, 29571}}};
      ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
      ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
      self.add(Arg_1).toString();
    });
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_4_Exception")
  void testadd_4() {
    assertThrows(Exception.class, () -> {
      int[][][] inputarray_Arg_1 = {
          {{-1261, 20956, -27531, 29641, 22549}, {-12478, -16292, 13543, 14644, 28042},
              {-20813, -16547, -13305, -20388, -20371}, {621, -7204, 30312, -10173, 9221},
              {28343, 18778, 30812, 11782, -28898}, {20870, -2564, 8641, 18446, 7303}},
          {{22517, -31345, 21497, 4122, -31639}, {24779, -11859, -13141, -1799, 14785},
              {16611, -28507, 28277, 18730, 5001}, {-16697, 22368, -23913, 2670, -9281},
              {18929, -32023, 15980, -10388, 3388}, {-10472, 20440, 31958, 8595, 10949}},
          {{-18095, 7611, 23087, 29257, -4507}, {-3375, 27229, 22167, -9962, -16038},
              {26059, -28684, 13661, -15672, 21750}, {-11184, -9946, 27002, 2314, -25919},
              {21901, 2394, -13638, 5381, 27933}, {-8602, 12025, -11522, -19297, 13416}},
          {{-18066, -8022, 25697, -4099, 6478}, {4094, -11414, 20186, -18428, -13979},
              {25544, -207, -19149, -7633, 3150}, {13364, -28615, -25663, 17252, 22248},
              {-2623, 14373, 16341, 18568, -11897}, {-16407, 27841, -30643, -19779, 6539}},
          {{-13766, -19044, 11458, -25509, -13582}, {32483, -1584, 21034, -11477, 7936},
              {-9937, 19525, -2568, -28641, 27815}, {-29214, -29734, 19074, -18752, -12690},
              {-30710, -1475, 7640, 2061, 11958}, {-8496, -4769, -10248, 19290, 32196}},
          {{-31629, -4614, -29139, -12544, -21450}, {-5791, -18219, 13640, -16548, -8193},
              {-11278, 26739, -6677, 18553, -15240}, {-28416, -24075, -29663, -7026, 26197},
              {6927, -22187, -31886, -23847, -19243}, {-31977, -17469, -26825, 3725, -14085}},
          {{20320, -5179, -21212, -20598, -23960}, {-14584, 19721, 19862, 13136, -26762},
              {25852, -13233, -8648, -25982, 16593}, {-10551, -8087, -4884, -24, 26447},
              {27544, -17174, -25786, -14032, -8429}, {-19458, 32536, -14933, 2116, 12133}}};
      int[][][] inputarray_self = {
          {{-23809, 29029, 3119, -1526, -22859}, {5991, -5901, 12016, 11636, -3246},
              {-23283, -10738, 16275, -7514, -23190}, {-25526, -15665, 11008, 25606, -22377},
              {-13431, -15160, -1341, 23122, -16696}, {-30960, 19597, 29477, -23525, -17188}},
          {{30835, -9929, 8979, -16050, 21489}, {25838, 28769, 4498, 3009, -2958},
              {-21099, 1142, -18869, 3137, 16834}, {-32610, 1406, -960, 10206, 27018},
              {-13946, 12093, -6426, 23121, 27790}, {32697, -28073, 14172, -31326, 17078}},
          {{-1249, -19226, 30855, -19289, -14430}, {-1142, -2695, 11188, 7759, 6173},
              {29900, 16667, -8349, 9051, -2502}, {-22143, 6485, 18779, 8671, 4304},
              {13376, 26440, -3, 862, 28790}, {-23427, 2189, -5799, 14825, 1927}},
          {{-10515, -26701, -28662, -11282, -9566}, {27932, -83, 167, 30907, -7138},
              {31409, -14305, -17150, 31290, 10113}, {29453, 7605, -4348, 7059, 28934},
              {-28174, -29136, -7756, -2597, -9282}, {23282, -9264, 17438, -29470, -3439}},
          {{29814, -11732, 344, -9871, -8886}, {-30385, 28917, -25795, -18703, -15185},
              {-587, 11773, 32225, 6294, 31820}, {-10026, 25775, 24307, -15417, -6005},
              {31112, -11404, -24650, 3930, -12029}, {21555, -26002, -22383, 2298, 2762}},
          {{-16530, 4846, -30021, 16543, 31036}, {-35, -10307, 20346, -28433, -255},
              {28199, 32237, -11138, -25628, -12191}, {-1343, 17727, 28364, 26191, 14158},
              {25083, 5146, -22820, 24026, -5464}, {817, 1965, -29304, 2260, -12804}},
          {{11737, 5669, 2129, 23402, -5083}, {24573, -28102, -5930, -20406, 8701},
              {7174, 22054, 31755, -19869, -24989}, {-29959, 14656, 18847, 20138, 31343},
              {17921, 26004, 6712, 16092, 19287}, {12487, 1380, 31698, -20768, -19483}},
          {{-1566, -28761, -27956, 29331, -30768}, {13961, 7654, 18852, -19443, 28559},
              {28123, -19440, -16139, 9525, 25345}, {32234, -21414, -27827, -11220, 6177},
              {-984, 20960, 28794, -31774, 678}, {-28064, 23868, -10997, -12254, 30995}},
          {{15639, -19006, 16929, 29627, -18954}, {-13566, 30851, -4714, 20977, -10412},
              {-29271, -7561, 10046, -30697, -28855}, {-3968, 2554, -18336, -27631, -30224},
              {-3433, -7722, -12310, 27158, -25787}, {27491, -10890, 5215, 22186, -18811}}};
      ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
      ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
      self.add(Arg_1).toString();
    });
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_9")
  void testadd_9() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-27594}}};
    int[][][] inputarray_self = {{{-1918}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[-29512]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_14")
  void testadd_14() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-1025, -32215}}};
    int[][][] inputarray_self = {{{6150, 1809}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[5125, -30406]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_19")
  void testadd_19() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-7149, -29131, -17172}}};
    int[][][] inputarray_self = {{{-13751, -6022, 6966}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[-20900, -35153, -10206]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_30")
  void testadd_30() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-11982}, {-11756}}};
    int[][][] inputarray_self = {{{17472}, {-23812}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[5490], [-35568]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_33")
  void testadd_33() throws Exception {
    int[][][] inputarray_Arg_1 = {{{24643, 20267, 20221, -25202}}};
    int[][][] inputarray_self = {{{31021, -8118, 1643, 23960}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[55664, 12149, 21864, -1242]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_68")
  void testadd_68() throws Exception {
    int[][][] inputarray_Arg_1 = {{{8701, 31719, 9646, 14526, -18093}}};
    int[][][] inputarray_self = {{{31711, -22719, 23313, -30651, 6079}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[40412, 9000, 32959, -16125, -12014]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_76")
  void testadd_76() throws Exception {
    int[][][] inputarray_Arg_1 = {{{13997}}, {{16065}}};
    int[][][] inputarray_self = {{{20866}}, {{-25311}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[34863]], [[-9246]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_90")
  void testadd_90() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-6894, 18198}, {-28594, 4764}}};
    int[][][] inputarray_self = {{{19329, 27528}, {258, -18852}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[12435, 45726], [-28336, -14088]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_126")
  void testadd_126() throws Exception {
    int[][][] inputarray_Arg_1 = {{{14272, -24377, 8521, -19913, 5222, -17069}}};
    int[][][] inputarray_self = {{{2447, -7751, 9645, 16306, -31489, 10214}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[16719, -32128, 18166, -3607, -26267, -6855]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_add_DCC_137")
  void testadd_137() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-9759}, {31474}, {27235}}};
    int[][][] inputarray_self = {{{-22077}, {7061}, {7996}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[-31836], [38535], [35231]]]", self.add(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_1_Exception")
  void testsub_1() {
    assertThrows(Exception.class, () -> {
      int[][][] inputarray_Arg_1 = {
          {{-1783, -6345, -18598, 4002, 5300, -9411, 24821, 24941},
              {-8318, -12724, 27851, 5823, 9284, 26638, -23294, 22655},
              {24584, -29586, -21586, -4968, 19672, -20695, -21793, -9200}},
          {{-20987, 14949, -7774, 30045, -526, -7926, 16698, 31117},
              {-23158, -10201, -15313, -22279, -22058, -16854, -23316, -18689},
              {-537, -13782, -14615, -19713, -27510, -3518, 13845, 10515}},
          {{26522, 4719, 25111, 17267, -8886, -2139, -4599, -2193},
              {30589, -4085, 12069, 5349, 20144, -7250, 13850, 2279},
              {-20798, -12556, 25854, 4996, -1103, -18652, 3514, -17293}},
          {{1075, 31509, -29321, -14815, 1658, -26003, 32679, -30752},
              {29518, 25500, 32482, -4648, -30811, 2409, -28368, 5718},
              {-11492, -28401, 7101, 26877, -21864, 31834, 3465, 28933}},
          {{-6130, 3761, -29666, 1903, -4311, -2986, -18847, 30568},
              {-32198, 31844, -23162, -8602, 16762, 13337, 3551, -17370},
              {-19535, -17681, 2581, -30512, 22425, 29819, -18225, -2514}},
          {{-27049, -29918, 26782, 10007, 5623, 5266, -11876, -9211},
              {-16559, 23713, 9720, -17670, 25736, -29605, -13014, -18834},
              {21217, 2865, 29359, -25249, 25336, 31488, 6331, -8737}},
          {{-15439, 29349, 25053, -31731, 30729, 2315, 24637, -28652},
              {-9398, -45, 23189, 25527, 21237, 28401, -32710, 20275},
              {25861, -16627, 27424, -5893, -114, -28708, 17128, 8679}},
          {{11044, -9557, 2700, 1843, -9302, -1894, -23678, -6368},
              {-848, -11085, -25751, -3496, 18577, 9651, 9561, -9243},
              {2434, 28431, 25767, 21174, 23537, -1104, 169, -32467}}};
      int[][][] inputarray_self = {
          {{-12620, -7397, 3906, -23793, 31036, 1966, 20761, -3454, 24528},
              {31454, 1900, -11202, 21328, -23887, -32513, -27172, 18351, 6602},
              {-13687, 2736, 18899, -29664, -1533, -28695, -27862, 31288, -25755}},
          {{4634, -12665, 5779, -3863, -15292, 11750, -9699, 13759, -13517},
              {-22378, -13516, -5689, 8282, -23799, 12487, -25755, 12187, -15197},
              {14614, 15209, 31166, -18432, 8720, -13176, -18765, -23142, -6215}},
          {{2120, 14288, 18684, -2743, 10306, -20449, -28404, -32077, 3180},
              {-18406, 5331, -9325, -18126, -7868, 27992, 25453, -4362, -25552},
              {-15915, 5182, 2623, 9544, 27690, -7936, 17945, -3469, -28312}},
          {{8521, -15467, -19162, -24791, 18200, -8099, 3458, 9239, 32090},
              {-19603, -27282, 23784, 24826, 1331, -16226, -11373, -27459, 20702},
              {-22416, -8730, 10016, 27953, -24325, -28104, -12467, 30633, 24936}},
          {{8757, -18181, -12832, -16700, 4137, 27940, -16287, 17841, 2787},
              {4824, 27139, -6859, -916, 24001, 30562, -9986, -840, -2122},
              {-28108, 1670, -16184, -23768, -5271, -3038, -32687, 15386, -2746}},
          {{1857, 6203, 16950, 14632, 1840, -11700, -20245, -20497, 23245},
              {21538, 11716, -17204, -13458, -4375, -3597, -15744, 18998, -19796},
              {29935, 12026, 7796, -11725, 22464, 20619, -23025, -1063, 21654}},
          {{-27469, -12195, 16261, -23759, -21475, 9628, 3071, 27512, 20069},
              {3966, -27078, -16738, -19348, -12568, 32361, 23080, 25249, -3935},
              {-13465, 21544, 30437, 7162, 18595, 28242, 22754, 13196, 6259}},
          {{24591, 26816, 722, 25315, 21313, -10585, 6704, 31214, -25507},
              {14864, 25942, 4544, 22099, 30327, -3332, 18088, 28645, -9938},
              {11164, 25758, 20374, -23834, 1599, -3370, 2871, 1382, 25001}}};
      ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
      ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
      self.sub(Arg_1).toString();
    });
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_2_Exception")
  void testsub_2() {
    assertThrows(Exception.class, () -> {
      int[][][] inputarray_Arg_1 = {
          {{8468, -24077, -32599, 32737}, {-4634, 7991, 7371, -29938}, {2939, -7964, 24288, -30724},
              {21024, -28012, 10923, -10326}, {-3677, -15390, -8828, 7178}},
          {{-17704, 15608, -20305, -4462}, {2589, 23636, -27333, -9988},
              {-27413, 9416, -13320, 16198}, {25354, -6228, 1718, -20765},
              {-15242, -24136, -12799, -30980}},
          {{1217, 31753, 20798, 11619}, {-30574, 2592, -10082, 3014},
              {26996, 32681, -10130, -16825}, {-19731, 10774, -16108, -5535},
              {28035, -7619, -20962, -23764}}};
      int[][][] inputarray_self = {
          {{21162, 15190, -13639, 23921}, {-18282, -31593, 35, 6644}, {14579, 29227, 30195, -23259},
              {-9314, 12092, -30189, -15023}, {1997, -5576, 4256, 26998},
              {13273, 25566, -8382, -18000}, {11440, 28089, -26346, -9069}},
          {{28442, -21792, 29352, 4194}, {14885, 15736, -11330, 23789}, {20405, -30650, -520, 7274},
              {26151, -17619, 12673, -10990}, {-9871, -21401, 6598, 22905},
              {31260, -2426, 10748, -15962}, {-19637, -10424, 14041, -20468}},
          {{-14799, -15085, 19176, -11616}, {26118, -26667, -27023, -17762},
              {-17706, -23911, -26144, 30859}, {-14334, -26229, -9382, 22721},
              {-25329, -623, 13518, 9698}, {11740, 12735, -14396, -332},
              {-870, 31784, 22949, -17205}}};
      ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
      ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
      self.sub(Arg_1).toString();
    });
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_4_Exception")
  void testsub_4() {
    assertThrows(Exception.class, () -> {
      int[][][] inputarray_Arg_1 = {
          {{-2556, -14156, -3545, 1841, -21362, -7416, 25573},
              {18272, -5213, -5104, 16746, -9515, -19583, -24321},
              {14230, 20938, 5768, -32089, 4662, -8888, -21734},
              {-6253, -13141, 16453, -14572, 803, -24331, 26387},
              {-30011, -24460, 4532, -16469, -16096, -30304, 5872},
              {7520, 2765, 7707, -2620, -29770, -4079, 4933}},
          {{-12948, 15000, -4141, -32750, -15050, 23730, -10378},
              {-18057, 26977, 14395, 21118, -6150, 13213, 11570},
              {5598, -27319, 12532, -13516, 24206, -14752, 31892},
              {-29505, 19662, -16372, -20480, 26556, -22951, 20791},
              {78, -20562, -28287, 3888, 3062, -26233, 28886},
              {30398, 1705, 24193, -29378, -2394, -1788, 30586}},
          {{-14069, 4723, -15361, -9649, 14879, -10052, -29185},
              {12154, -16099, -10045, -25648, -2205, 31162, -25043},
              {-17261, 285, 10143, 14541, -11680, 5732, 10804},
              {-9584, -4690, -8956, -14642, -12070, 11246, -21746},
              {-3338, -20887, -3005, 23744, -5950, -28312, -11494},
              {28056, 8504, 19615, -22047, -28738, 4996, 26280}},
          {{25139, -26398, -6674, 22607, -24644, 28717, 23060},
              {12321, -15979, 6694, -24961, -31575, 27762, -21369},
              {10074, 18184, -22058, 7672, 27910, -22305, 27883},
              {-8460, 225, 18824, 27834, -6450, -28303, 15734},
              {-19040, 24875, -9365, -10722, 19572, 23342, -15001},
              {-2747, -1768, -6148, 23277, -2266, 31184, 5005}},
          {{5971, -26776, 11346, 10653, 35, -606, -20137},
              {-26972, -3275, 24060, 13423, 31031, -30011, -16606},
              {30289, 10537, -11422, -21141, -31755, -2239, 14609},
              {-4373, 24144, 947, -4138, -31195, 26989, 22273},
              {25438, -18859, -28759, -31257, -12226, -8255, 7513},
              {22370, 7304, -7408, 6301, 27912, -8263, -7971}},
          {{-4021, -10183, 16663, 30552, -6842, -1229, 28256},
              {16522, -16379, 7932, -7571, 5849, -12519, 31667},
              {-18254, 28855, -8909, -19595, 28358, -16939, -3828},
              {5396, 31036, 12562, -2936, 31234, -17421, -962},
              {30639, 3288, 13092, -18378, -26938, -19498, 10798},
              {5172, 268, -18772, 2410, 11470, -24919, 13313}},
          {{26896, -30514, 12492, 10328, -11364, -11515, 16299},
              {-29701, -20826, -14093, 9178, 12710, 12910, -31259},
              {-30287, 29663, -29033, 12097, -28753, 24366, 16258},
              {16114, 31119, 2213, 18469, -10684, -7630, 11649},
              {-20425, 20795, 13794, 12726, -20539, -9214, -5107},
              {-29040, 7475, 7304, 29740, 23555, -17397, -23889}}};
      int[][][] inputarray_self = {
          {{8422, 27290, 201, -16638, -22782, 24181, -8137},
              {-23007, -32622, -19946, 3357, -16248, 31906, -2415},
              {18529, 24357, 29087, 15943, 15098, 10964, 22753},
              {14780, -27408, -9530, -7287, 9839, 25180, -20987},
              {6575, -29036, 24264, 4815, 1235, 3810, 23083},
              {24049, 31831, -23490, -21592, 26678, 22889, 4415}},
          {{16283, 27371, 170, -18584, -5786, 23675, 14204},
              {-30254, 27235, -15733, -16310, 1899, 2305, 4218},
              {30333, -20631, 23458, -24447, -21653, -30613, 30073},
              {11279, -12473, -28525, -13659, 32128, 32625, 28269},
              {15593, 27237, 1045, 12735, 26860, 32120, 32315},
              {-3413, -32486, 17738, 19509, -22389, 18557, -4765}},
          {{193, -14737, -12933, 17406, 2583, -10998, -20275},
              {-29644, -6619, -7596, 21381, -21450, 27719, 2632},
              {-14602, 7919, -4503, -7154, 5115, -13571, -8353},
              {12367, -26275, 25083, 7108, -5569, 24136, -29960},
              {21591, -19873, -32725, 11905, -286, -30299, 23864},
              {30924, -7404, 17381, -12401, 11293, -27140, 9257}},
          {{29281, -23868, 5034, -1033, -11289, 27066, 25332},
              {-935, -20630, 9596, 25901, -5486, 31016, 26804},
              {7203, 8627, -6358, 921, 27526, -22644, -13811},
              {-20241, 25865, 22487, 3096, -1712, 4318, -29603},
              {-16953, 17003, 18454, -8018, -29642, 19848, -27151},
              {-12897, 16713, 6313, 7527, -26720, -17386, -17311}}};
      ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
      ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
      self.sub(Arg_1).toString();
    });
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_9")
  void testsub_9() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-14158}}};
    int[][][] inputarray_self = {{{7036}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[21194]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_14")
  void testsub_14() throws Exception {
    int[][][] inputarray_Arg_1 = {{{30768, -27015}}};
    int[][][] inputarray_self = {{{23887, -15715}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[-6881, 11300]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_19")
  void testsub_19() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-11369, 22198, -31332}}};
    int[][][] inputarray_self = {{{5970, 27040, -17606}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[17339, 4842, 13726]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_30")
  void testsub_30() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-29582}, {-28051}}};
    int[][][] inputarray_self = {{{29666}, {19172}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[59248], [47223]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_33")
  void testsub_33() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-15110, 8834, 6563, 10213}}};
    int[][][] inputarray_self = {{{-28914, -15886, 4695, 30139}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[-13804, -24720, -1868, 19926]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_68")
  void testsub_68() throws Exception {
    int[][][] inputarray_Arg_1 = {{{4376, -31451, 5270, -7886, -1105}}};
    int[][][] inputarray_self = {{{-22843, -29121, 16603, 14191, -29701}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[-27219, 2330, 11333, 22077, -28596]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_76")
  void testsub_76() throws Exception {
    int[][][] inputarray_Arg_1 = {{{20460}}, {{1404}}};
    int[][][] inputarray_self = {{{-31281}}, {{2207}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[-51741]], [[803]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_90")
  void testsub_90() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-15215, -11080}, {281, 26928}}};
    int[][][] inputarray_self = {{{12771, -11996}, {-19897, 8858}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[27986, -916], [-20178, -18070]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_126")
  void testsub_126() throws Exception {
    int[][][] inputarray_Arg_1 = {{{-7869, 28047, -25495, 13683, -26396, 10371}}};
    int[][][] inputarray_self = {{{-1350, -11733, 16441, 4939, -8544, 11161}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[6519, -39780, 41936, -8744, 17852, 790]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_sub_DCC_137")
  void testsub_137() throws Exception {
    int[][][] inputarray_Arg_1 = {{{25037}, {-27988}, {24126}}};
    int[][][] inputarray_self = {{{3563}, {-8136}, {5421}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    ThreeDimVarArray Arg_1 = new ThreeDimVarArray(inputarray_Arg_1);
    assertEquals("[[[-21474], [19852], [-18705]]]", self.sub(Arg_1).toString());
  }

  @Test
  @DisplayName("DynamicFixedsizeArrays_ThreeDimVarArray_getData_DCC_1")
  void testgetData_1() throws Exception {
    int[][][] inputarray_self = {{{-23214}}, {{6837}}, {{8458}}};
    ThreeDimVarArray self = new ThreeDimVarArray(inputarray_self);
    assertEquals("[[[-23214]], [[6837]], [[8458]]]", self.getData().toString());
  }
}

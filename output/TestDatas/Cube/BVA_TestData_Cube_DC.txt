Class: Cube, Method: Cube, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[-29875, 30254, 24626, -7048], [30715, 2466, -12238, 10074]]], [ 1, 2, 4 ] ]
Arg_1 = [[[-29875, 30254, 24626, -7048], [30715, 2466, -12238, 10074]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: Cube, Method: add, Test Case Number: 1
Boundaray Feasiable Path1391_1:
Self = [ [[[-19680, 18274, 407, 16025], [25587, 23221, -8817, 14020]]], [ 1, 2, 4 ] ]
Arg_1 = [ [[[6184, 20883, 16025, 25710], [32575, 24844, 7162, 26387]]], [ 1, 2, 4 ] ]
Result = [ [[[-13496, 39157, 16432, 41735], [58162, 48065, -1655, 40407]]], [ 1, 2, 4 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: Cube, Method: sub, Test Case Number: 1
Boundaray Feasiable Path1391_1:
Self = [ [[[21919, 8050, 21186, -3455], [16119, 12526, -30565, -32152]]], [ 1, 2, 4 ] ]
Arg_1 = [ [[[-11729, -2115, -14587, 10245], [28976, -16403, -9745, -19078]]], [ 1, 2, 4 ] ]
Result = [ [[[33648, 10165, 35773, -13700], [-12857, 28929, -20820, -13074]]], [ 1, 2, 4 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: Cube, Method: getData, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[30064, 2676, -16056, -10316], [-15450, -17298, 18322, 17123]]], [ 1, 2, 4 ] ]
Result = [[[30064, 2676, -16056, -10316], [-15450, -17298, 18322, 17123]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Class: Cube, Method: Cube, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[-23055, -17744, 1231, -11857], [17127, 3793, 12602, 12640]]], [ 1, 2, 4 ] ]
Arg_1 = [[[-23055, -17744, 1231, -11857], [17127, 3793, 12602, 12640]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: Cube, Method: add, Test Case Number: 1
Boundaray Feasiable Path1391_1:
Self = [ [[[-30345, 22723, -43, 32511], [26112, -22411, -29359, 9033]]], [ 1, 2, 4 ] ]
Arg_1 = [ [[[-27209, 26614, -3897, 16919], [15651, 29998, 22056, -10126]]], [ 1, 2, 4 ] ]
Result = [ [[[-57554, 49337, -3940, 49430], [41763, 7587, -7303, -1093]]], [ 1, 2, 4 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: Cube, Method: sub, Test Case Number: 1
Boundaray Feasiable Path1391_1:
Self = [ [[[6013, 12566, 834, -4558], [7928, -31610, -21370, 26981]]], [ 1, 2, 4 ] ]
Arg_1 = [ [[[17779, 27038, 8992, 15741], [-12413, -28932, 14156, 13632]]], [ 1, 2, 4 ] ]
Result = [ [[[-11766, -14472, -8158, -20299], [20341, -2678, -35526, 13349]]], [ 1, 2, 4 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: Cube, Method: getData, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[6579, 21174, -29592, 8286], [-26594, -22625, -15386, -12658]]], [ 1, 2, 4 ] ]
Result = [[[6579, 21174, -29592, 8286], [-26594, -22625, -15386, -12658]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Class: Cube, Method: Cube, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[29530, -19665, -13228, -11017], [-23451, 13259, 8884, -23354]]], [ 1, 2, 4 ] ]
Arg_1 = [[[29530, -19665, -13228, -11017], [-23451, 13259, 8884, -23354]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: Cube, Method: add, Test Case Number: 1
Boundaray Feasiable Path1391_1:
Self = [ [[[-20520, 30289, 10985, -21261], [32021, -28490, 14704, -7300]]], [ 1, 2, 4 ] ]
Arg_1 = [ [[[31845, 23787, -4068, -2317], [-16612, -15050, 22130, 32533]]], [ 1, 2, 4 ] ]
Result = [ [[[11325, 54076, 6917, -23578], [15409, -43540, 36834, 25233]]], [ 1, 2, 4 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: Cube, Method: sub, Test Case Number: 1
Boundaray Feasiable Path1391_1:
Self = [ [[[5521, -3437, -16246, -2714], [30327, -10186, -24902, 22506]]], [ 1, 2, 4 ] ]
Arg_1 = [ [[[11867, 17857, -15301, 8413], [-19445, -18219, 25240, 24775]]], [ 1, 2, 4 ] ]
Result = [ [[[-6346, -21294, -945, -11127], [49772, 8033, -50142, -2269]]], [ 1, 2, 4 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: Cube, Method: getData, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[-17297, -2393, 30053, 29039], [1435, 16372, 8395, -185]]], [ 1, 2, 4 ] ]
Result = [[[-17297, -2393, 30053, 29039], [1435, 16372, 8395, -185]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

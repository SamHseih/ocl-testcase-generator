Class: ThreeDimVarArray, Method: , Test Case Number: 1
Boundaray Feasiable Path1_1:
Invariant Self = [ [[[25084], [13942], [19933], [1161], [-17691], [5848], [-27120], [-18484], [9158]], [[-13971], [4842], [-27695], [-16523], [5585], [-10080], [325], [4909], [-1338]], [[-22293], [3319], [23084], [-11636], [-27312], [29541], [18445], [4025], [14601]], [[-30312], [32141], [-3395], [-30218], [20475], [-22727], [-22035], [18049], [11838]], [[-15811], [-8564], [9464], [-1078], [29349], [-29769], [-2830], [6972], [-18079]], [[20824], [11569], [18072], [-18722], [30827], [-2912], [-25888], [9786], [3765]], [[18851], [27521], [28291], [11589], [10486], [-17288], [-17931], [5670], [-13100]], [[14104], [7465], [-6550], [16936], [-12109], [7407], [7813], [23266], [18792]], [[-30089], [844], [-15548], [15996], [16395], [17777], [23268], [-25194], [26488]], [[11458], [9609], [-7778], [9202], [6361], [27324], [-10528], [-24263], [-1944]]], [ 10, 9, 1 ] ]

---------------------------------------    -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: ThreeDimVarArray, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[-30142, 5579, -8737, -14737, 544], [14908, -12164, 12043, -31631, 1271], [27054, 17225, -22626, 4464, -19955], [3120, -26433, -10083, 25970, -29558]], [[26320, -11701, -1068, -18608, -13881], [21086, -25374, 13132, -32410, -25607], [18880, 27717, 14521, 14870, -20428], [7925, 28493, 14880, -21373, 256]], [[-15375, -18076, -31429, -15643, -24798], [24786, 23166, 14770, -24188, 12144], [1397, 19878, 31099, -18224, -25477], [1642, -24000, -1666, 4750, 7878]], [[-7755, 17118, -9986, 16854, 19161], [27345, 11045, -8586, 77, 19280], [28337, 17510, -28651, -31695, -8404], [16745, -2378, -15741, 13602, 4671]], [[-22833, 14181, 21218, -11495, 31147], [-25936, -2467, 17141, -5290, 8311], [-27799, -12582, 318, 26564, 27197], [-19995, -18255, -11703, -16340, 17110]], [[-26802, -973, 26398, -15208, -32334], [-9232, -28156, 3106, 5156, 2449], [31354, 22424, -17710, 15399, -5166], [-23526, 27573, 16900, -1789, -16832]], [[-21245, 8719, -20303, 21409, 19856], [18993, 4107, 32696, -11007, 25793], [14237, -27870, 21921, 22549, 14501], [2338, 24789, 12608, -28272, -22223]], [[967, -5072, -29332, 24655, -830], [-8439, 27338, 16283, -30058, -4184], [-2634, 29397, 1408, 5214, 29512], [-22562, -30635, 19670, -12429, -9113]], [[4874, -32234, 935, 20455, -16821], [-24913, -8122, -18270, 8268, 24077], [-32734, 15962, -24025, -12156, -10052], [-16892, -14336, 2742, 22468, 13040]]], [ 9, 4, 5 ] ]
Arg_1 = [[[-30142, 5579, -8737, -14737, 544], [14908, -12164, 12043, -31631, 1271], [27054, 17225, -22626, 4464, -19955], [3120, -26433, -10083, 25970, -29558]], [[26320, -11701, -1068, -18608, -13881], [21086, -25374, 13132, -32410, -25607], [18880, 27717, 14521, 14870, -20428], [7925, 28493, 14880, -21373, 256]], [[-15375, -18076, -31429, -15643, -24798], [24786, 23166, 14770, -24188, 12144], [1397, 19878, 31099, -18224, -25477], [1642, -24000, -1666, 4750, 7878]], [[-7755, 17118, -9986, 16854, 19161], [27345, 11045, -8586, 77, 19280], [28337, 17510, -28651, -31695, -8404], [16745, -2378, -15741, 13602, 4671]], [[-22833, 14181, 21218, -11495, 31147], [-25936, -2467, 17141, -5290, 8311], [-27799, -12582, 318, 26564, 27197], [-19995, -18255, -11703, -16340, 17110]], [[-26802, -973, 26398, -15208, -32334], [-9232, -28156, 3106, 5156, 2449], [31354, 22424, -17710, 15399, -5166], [-23526, 27573, 16900, -1789, -16832]], [[-21245, 8719, -20303, 21409, 19856], [18993, 4107, 32696, -11007, 25793], [14237, -27870, 21921, 22549, 14501], [2338, 24789, 12608, -28272, -22223]], [[967, -5072, -29332, 24655, -830], [-8439, 27338, 16283, -30058, -4184], [-2634, 29397, 1408, 5214, 29512], [-22562, -30635, 19670, -12429, -9113]], [[4874, -32234, 935, 20455, -16821], [-24913, -8122, -18270, 8268, 24077], [-32734, 15962, -24025, -12156, -10052], [-16892, -14336, 2742, 22468, 13040]]]

---------------------------------------    -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: add, Test Case Number: 11
Boundaray Feasiable Path1_1:
Self = [ [[[-28281, -20348, -18949, 1323, -21987, -18155, -10306, 13711, -32532], [31371, -25193, 15249, 25289, 26365, -14328, 1286, -8365, -5844], [2001, 5775, 6278, 23544, -2195, -19887, 24720, -9015, 1227], [-7079, 16435, 20989, -20960, 2189, -1814, 15662, -20434, -23065], [-5718, -21399, -10652, 30587, -27041, 13101, 15025, 21388, -11639], [23400, -5110, -5193, -14932, -9305, -9689, -13122, -26514, -27840], [-27345, -4479, 13478, -11225, -32187, -18736, 24236, 13067, -12779]]], [ 1, 7, 9 ] ]
Arg_1 = [ [[[10742, 21167, 15744, 30047, 24406, -1517, 8018, -120, -18995], [17190, -1531, -29544, -31473, 4785, 2713, -3834, 30410, -19230], [18703, -32624, 19534, 4827, 3439, -22015, 22899, 8617, 15388], [-8239, -13794, -26202, 29175, -29950, -31978, -2257, -18864, -22995], [-28794, 482, -17106, 4734, -5037, 15334, -6220, 11142, 17193], [4563, 11510, 17361, -21374, 19705, -31115, 26734, 30253, 17510], [11607, 23563, -22213, 13500, -10232, -20754, 14576, 16209, 11914]], [[-29969, -20707, -30577, 27113, 28867, -23856, 17967, -7764, 31193], [-14256, -15924, -17757, 24454, 2270, 15515, 25762, -5683, 18137], [12998, 9063, 32534, 30322, 30603, 25501, 19456, -278, 22598], [27023, 20716, -15148, -22750, -1728, -22183, -22613, -20566, 9512], [13930, 16672, 29065, -28636, 2583, -12266, 31306, -14216, 14529], [31079, 220, 18253, -17188, -21106, -25364, 1324, 28545, -26799], [2697, 9886, 18877, 26668, -11057, 7499, -9432, 7204, -30244]]], [ 2, 7, 9 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path6_1:
Self = [ [[[-13729]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[-11278]]], [ 1, 1, 1 ] ]
Result = [ [[[-25007]]], [ 1, 1, 1 ] ]

Boundaray Feasiable Path11_1:
Self = [ [[[30585, -3091]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[-12434, 4621]]], [ 1, 1, 2 ] ]
Result = [ [[[18151, 1530]]], [ 1, 1, 2 ] ]

Boundaray Feasiable Path16_1:
Self = [ [[[-23901, 8650, 26378]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[-29311, 31169, -8951]]], [ 1, 1, 3 ] ]
Result = [ [[[-53212, 39819, 17427]]], [ 1, 1, 3 ] ]

Boundaray Feasiable Path27_1:
Self = [ [[[-8874], [2450]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[13324], [-29255]]], [ 1, 2, 1 ] ]
Result = [ [[[4450], [-26805]]], [ 1, 2, 1 ] ]

Boundaray Feasiable Path30_1:
Self = [ [[[15433, -6553, -13077, -31660]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[13476, 27923, 26149, -18993]]], [ 1, 1, 4 ] ]
Result = [ [[[28909, 21370, 13072, -50653]]], [ 1, 1, 4 ] ]

Boundaray Feasiable Path65_1:
Self = [ [[[-8214, 3036, -12733, 2932, 9067]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[-12271, -6873, 14831, 2759, -27703]]], [ 1, 1, 5 ] ]
Result = [ [[[-20485, -3837, 2098, 5691, -18636]]], [ 1, 1, 5 ] ]

Boundaray Feasiable Path73_1:
Self = [ [[[4835]], [[-21732]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[16791]], [[-7492]]], [ 2, 1, 1 ] ]
Result = [ [[[21626]], [[-29224]]], [ 2, 1, 1 ] ]

Boundaray Feasiable Path87_1:
Self = [ [[[-4949, 26427], [-22385, -18498]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[-18647, 31348], [12783, 32637]]], [ 1, 2, 2 ] ]
Result = [ [[[-23596, 57775], [-9602, 14139]]], [ 1, 2, 2 ] ]

Boundaray Feasiable Path123_1:
Self = [ [[[9855, 31360, -28896, 4740, -13907, -8415]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[2267, -13698, 17525, -30123, -17792, -10337]]], [ 1, 1, 6 ] ]
Result = [ [[[12122, 17662, -11371, -25383, -31699, -18752]]], [ 1, 1, 6 ] ]

Boundaray Feasiable Path134_1:
Self = [ [[[27653], [13265], [1968]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[7819], [-14128], [28904]]], [ 1, 3, 1 ] ]
Result = [ [[[35472], [-863], [30872]]], [ 1, 3, 1 ] ]

---------------------------------------    -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: sub, Test Case Number: 11
Boundaray Feasiable Path1_1:
Self = [ [[[-2223, 4691, -27657, -15785, -18529], [-25015, -29145, -30923, 7436, -30297], [-1984, 22263, -32530, 3850, -7434], [-18827, 20250, -7837, -10866, -17681], [31064, -23801, 32427, -15791, 9530], [-25338, -23276, 2338, -19702, -2232], [32239, 14392, 15068, -11096, 32574], [21236, -8860, -20309, -19885, -1378]]], [ 1, 8, 5 ] ]
Arg_1 = [ [[[18007, 26567, 7313, -14805, -25336], [-9345, 7284, -21911, -4176, -9026], [2251, -26165, 25768, -1957, 6765], [-31507, -4929, 5075, 3413, 21867], [-17103, 8351, -25557, 6907, -19177], [19383, -1470, 22228, -7957, 19754], [-32484, -10987, 6367, -10923, -15738], [-27158, 5192, -16353, 15168, 12927]], [[3539, 22451, -6444, 7873, 10575], [-24538, -27573, -28422, -5761, 3460], [2284, -6641, -21978, 19127, 30840], [-20281, 20210, -3332, -955, 14589], [10697, 20406, -24270, 12530, -29895], [-1969, 23631, -22391, 28644, 14476], [32082, -23917, -1175, 10020, -10852], [26112, -23616, -296, 15165, 16174]], [[-25013, -14791, 520, -21761, 26246], [9395, -26515, -21461, -9853, -12207], [-7865, -22044, -3473, 20642, 9762], [27105, -11011, 6853, 12075, 3943], [-7811, 6410, -24631, 16915, 25748], [32725, 5452, -3821, 13111, 32213], [-3267, 14912, -19995, -5109, -22871], [14505, 7, -24398, -14636, 3084]], [[-26556, -20890, -2343, -20010, -2155], [-6785, -25547, -15619, -8849, -12405], [24214, -23941, -20917, -15609, 21984], [5904, 6803, -2111, -9535, -26973], [373, -1057, 11742, 6588, -13951], [32763, 19520, 2122, -25435, 15224], [28479, -8902, -26935, 27462, -21209], [-3494, -13542, 2095, -12815, 4147]], [[-31096, 30465, -8899, -17003, -29163], [-3601, 12773, -27705, -15889, 17065], [-24237, 24763, -675, 12952, 9418], [27320, 3013, 31277, -21013, 26305], [-15522, 10809, 31739, 1933, -4539], [17276, 9764, 6867, -32546, -21503], [15303, 7293, -15737, -9905, -1358], [-13620, -14240, -6918, -19621, -17077]], [[24636, 18163, 11744, 26808, -8774], [-23561, -29050, -25846, 13912, 2289], [6217, -20730, 27713, 23128, 14134], [-8775, -6126, -513, -23659, 28131], [24732, 10142, 11672, 16709, -21110], [19896, -8993, 32387, 29227, -9236], [-32432, 28010, 28046, -20817, 17250], [-5437, 1413, 1645, 12853, 5148]], [[3933, -28540, 3670, -28353, 31900], [28008, -16064, -24109, -823, 26089], [7255, 14791, 2002, -5491, -20236], [12402, -4853, 12098, -29597, -28063], [-23086, 23273, 16350, 17046, 29172], [24598, 26727, -30994, 11708, -10419], [-11305, 20562, -13102, -18602, 19653], [-20001, -19506, -9866, -19521, 25003]], [[11509, 4887, -19957, 4726, 23490], [22661, 16388, 13594, 16050, -6512], [14134, 7491, -10825, 8365, -12405], [-26470, -4467, -31602, -870, 17357], [-29991, 5902, -20423, 31095, -20909], [-11383, -10805, 14349, 9930, -31961], [-27140, -31401, 31116, 18258, -25686], [-11787, 20225, 21281, -3133, -3601]]], [ 8, 8, 5 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path6_1:
Self = [ [[[15543]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[29763]]], [ 1, 1, 1 ] ]
Result = [ [[[-14220]]], [ 1, 1, 1 ] ]

Boundaray Feasiable Path11_1:
Self = [ [[[-17460, -4937]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[6264, 8630]]], [ 1, 1, 2 ] ]
Result = [ [[[-23724, -13567]]], [ 1, 1, 2 ] ]

Boundaray Feasiable Path16_1:
Self = [ [[[-27251, 10430, -1804]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[24895, 8964, -16441]]], [ 1, 1, 3 ] ]
Result = [ [[[-52146, 1466, 14637]]], [ 1, 1, 3 ] ]

Boundaray Feasiable Path27_1:
Self = [ [[[-28857], [14967]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[7461], [-2894]]], [ 1, 2, 1 ] ]
Result = [ [[[-36318], [17861]]], [ 1, 2, 1 ] ]

Boundaray Feasiable Path30_1:
Self = [ [[[90, -4364, -6714, 19983]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[14862, -2619, -30368, 22163]]], [ 1, 1, 4 ] ]
Result = [ [[[-14772, -1745, 23654, -2180]]], [ 1, 1, 4 ] ]

Boundaray Feasiable Path65_1:
Self = [ [[[-1036, -26048, -24530, 31810, -4761]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[-5866, -12618, 23823, 4974, 5074]]], [ 1, 1, 5 ] ]
Result = [ [[[4830, -13430, -48353, 26836, -9835]]], [ 1, 1, 5 ] ]

Boundaray Feasiable Path73_1:
Self = [ [[[18960]], [[-31143]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[27592]], [[30797]]], [ 2, 1, 1 ] ]
Result = [ [[[-8632]], [[-61940]]], [ 2, 1, 1 ] ]

Boundaray Feasiable Path87_1:
Self = [ [[[29308, 24047], [-28792, 19739]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[13550, -4706], [4473, -15454]]], [ 1, 2, 2 ] ]
Result = [ [[[15758, 28753], [-33265, 35193]]], [ 1, 2, 2 ] ]

Boundaray Feasiable Path123_1:
Self = [ [[[-28911, -24780, -27660, 2859, 7678, 27051]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[-14410, -17320, 4687, 22173, 24404, 11251]]], [ 1, 1, 6 ] ]
Result = [ [[[-14501, -7460, -32347, -19314, -16726, 15800]]], [ 1, 1, 6 ] ]

Boundaray Feasiable Path134_1:
Self = [ [[[-15895], [9262], [-31529]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[7490], [7523], [18560]]], [ 1, 3, 1 ] ]
Result = [ [[[-23385], [1739], [-50089]]], [ 1, 3, 1 ] ]

---------------------------------------    -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: getData, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[-6158, -31114, -10019, -5856, 6274], [24238, 16122, 623, 20881, -30817], [-25763, -18861, -5164, -23554, -17779], [-12657, 2266, -15383, -636, -26675]], [[-18008, -32706, -28955, 25532, 2778], [-21550, 29593, 28184, -28656, -25708], [-16433, 16625, 30275, -7949, 28345], [-2939, -15140, -715, 28219, -30014]], [[25651, -10015, 2370, -20466, 16182], [711, 20575, 19793, -7329, -8044], [18920, -10449, 5169, -11308, -20881], [-22375, -7300, -26390, -14170, 15823]], [[-13754, -4261, -8332, -28976, 1703], [-25002, -1999, -11894, -25452, 11323], [11589, 13759, -21082, -4464, 16173], [-26367, -19275, 25572, 18003, 28569]], [[-6561, 5778, 20031, 4548, 9427], [-14128, 2501, -23378, 21099, -7036], [5355, -31693, 19694, 5770, 9045], [23318, 26731, 8687, -29824, 27889]], [[10843, -2422, 20355, 7135, -23188], [-4118, 30222, -26209, 11790, 24383], [31135, 10275, -10970, 22125, -26632], [-17924, 4783, 14979, 4881, 24667]], [[16848, -22411, 1449, 32627, -19847], [-21611, 25223, 21089, -20725, 26868], [21214, -30183, -1126, -5179, -1690], [-30428, -15786, 26877, -22945, 4714]], [[-22278, -79, 27982, -11463, -29158], [-7151, -2550, 14175, -1025, 9190], [9968, 17301, 11677, 17808, -12683], [-12357, 968, 15874, -24326, 583]], [[-12578, 15293, -25165, -20336, -11625], [13037, -2401, -17806, 13492, -12873], [-21066, 9762, -27961, 10329, -5404], [-8809, 21060, 395, 2031, 17680]]], [ 9, 4, 5 ] ]
Result = [[[-6158, -31114, -10019, -5856, 6274], [24238, 16122, 623, 20881, -30817], [-25763, -18861, -5164, -23554, -17779], [-12657, 2266, -15383, -636, -26675]], [[-18008, -32706, -28955, 25532, 2778], [-21550, 29593, 28184, -28656, -25708], [-16433, 16625, 30275, -7949, 28345], [-2939, -15140, -715, 28219, -30014]], [[25651, -10015, 2370, -20466, 16182], [711, 20575, 19793, -7329, -8044], [18920, -10449, 5169, -11308, -20881], [-22375, -7300, -26390, -14170, 15823]], [[-13754, -4261, -8332, -28976, 1703], [-25002, -1999, -11894, -25452, 11323], [11589, 13759, -21082, -4464, 16173], [-26367, -19275, 25572, 18003, 28569]], [[-6561, 5778, 20031, 4548, 9427], [-14128, 2501, -23378, 21099, -7036], [5355, -31693, 19694, 5770, 9045], [23318, 26731, 8687, -29824, 27889]], [[10843, -2422, 20355, 7135, -23188], [-4118, 30222, -26209, 11790, 24383], [31135, 10275, -10970, 22125, -26632], [-17924, 4783, 14979, 4881, 24667]], [[16848, -22411, 1449, 32627, -19847], [-21611, 25223, 21089, -20725, 26868], [21214, -30183, -1126, -5179, -1690], [-30428, -15786, 26877, -22945, 4714]], [[-22278, -79, 27982, -11463, -29158], [-7151, -2550, 14175, -1025, 9190], [9968, 17301, 11677, 17808, -12683], [-12357, 968, 15874, -24326, 583]], [[-12578, 15293, -25165, -20336, -11625], [13037, -2401, -17806, 13492, -12873], [-21066, 9762, -27961, 10329, -5404], [-8809, 21060, 395, 2031, 17680]]]

---------------------------------------    -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Class: ThreeDimVarArray, Method: , Test Case Number: 1
Boundaray Feasiable Path1_1:
Invariant Self = [ [[[10888], [-843], [7482], [8313]], [[20906], [10452], [-32719], [-16287]], [[22783], [21390], [-25454], [-15077]], [[25344], [25900], [7217], [-14124]], [[-6697], [30898], [26240], [-21017]]], [ 5, 4, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: ThreeDimVarArray, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[14511, 28570, 6638], [-6389, 26194, -5968], [28849, 21191, 30541], [25927, 8564, 9578]], [[15132, 15551, 20526], [-12680, 870, 24138], [-17257, 26966, 7188], [-8541, -20302, -30954]], [[-22077, -27210, -9784], [-2701, 2490, 20145], [13647, 31566, -11611], [5258, 14942, 21863]], [[-31243, 8530, 19809], [-31375, 3984, -19141], [-575, 4269, -17444], [11768, -30687, -15202]]], [ 4, 4, 3 ] ]
Arg_1 = [[[14511, 28570, 6638], [-6389, 26194, -5968], [28849, 21191, 30541], [25927, 8564, 9578]], [[15132, 15551, 20526], [-12680, 870, 24138], [-17257, 26966, 7188], [-8541, -20302, -30954]], [[-22077, -27210, -9784], [-2701, 2490, 20145], [13647, 31566, -11611], [5258, 14942, 21863]], [[-31243, 8530, 19809], [-31375, 3984, -19141], [-575, 4269, -17444], [11768, -30687, -15202]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: add, Test Case Number: 11
Boundaray Feasiable Path1_1:
Self = [ [[[-8753, 30077, -25412], [-21151, -26246, 28638], [-9347, -22913, -22158], [-10845, -18336, 32581], [15175, -22328, -26279]], [[-24887, -8155, 31712], [1125, -20254, 1676], [-18816, 30393, -12934], [-29761, 25259, 8068], [12396, -27915, 14562]], [[-8311, 32484, -20959], [-6699, -12444, -22802], [-19120, 27304, 15941], [-29241, -9698, 17066], [-25218, -21637, 30381]]], [ 3, 5, 3 ] ]
Arg_1 = [ [[[25363, -6653, 134], [20745, 55, -16164], [-25950, -4882, -28026], [-3017, -9216, -277], [-30730, -10, -19671]], [[-29229, -31782, -9742], [-32071, -29646, -28897], [968, 6297, -10953], [-25191, 29043, -29273], [29019, -11019, 24254]], [[3011, 25488, -27640], [7271, -17804, -20595], [5566, -4585, 10525], [-8330, -15525, 24961], [-29895, 17994, -23901]], [[-27033, -22185, -747], [-1597, 4748, 25804], [-13478, 11249, -9157], [31691, -13758, -21685], [22169, -10805, 2642]]], [ 4, 5, 3 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path6_1:
Self = [ [[[-20928]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[114]]], [ 1, 1, 1 ] ]
Result = [ [[[-20814]]], [ 1, 1, 1 ] ]

Boundaray Feasiable Path11_1:
Self = [ [[[26280, 4000]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[25006, 31999]]], [ 1, 1, 2 ] ]
Result = [ [[[51286, 35999]]], [ 1, 1, 2 ] ]

Boundaray Feasiable Path16_1:
Self = [ [[[2722, 13866, -16023]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[26720, -6458, -4094]]], [ 1, 1, 3 ] ]
Result = [ [[[29442, 7408, -20117]]], [ 1, 1, 3 ] ]

Boundaray Feasiable Path27_1:
Self = [ [[[-7688], [32180]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[-12072], [-22795]]], [ 1, 2, 1 ] ]
Result = [ [[[-19760], [9385]]], [ 1, 2, 1 ] ]

Boundaray Feasiable Path30_1:
Self = [ [[[6976, -6160, 5641, -23294]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[20322, -20728, 395, 23485]]], [ 1, 1, 4 ] ]
Result = [ [[[27298, -26888, 6036, 191]]], [ 1, 1, 4 ] ]

Boundaray Feasiable Path65_1:
Self = [ [[[-7575, -18019, 16870, -10301, -4164]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[27148, -28509, -12168, -18922, 23886]]], [ 1, 1, 5 ] ]
Result = [ [[[19573, -46528, 4702, -29223, 19722]]], [ 1, 1, 5 ] ]

Boundaray Feasiable Path73_1:
Self = [ [[[14958]], [[-24705]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[-23220]], [[30764]]], [ 2, 1, 1 ] ]
Result = [ [[[-8262]], [[6059]]], [ 2, 1, 1 ] ]

Boundaray Feasiable Path87_1:
Self = [ [[[26811, 16444], [10367, 4024]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[6820, 30964], [11224, 29814]]], [ 1, 2, 2 ] ]
Result = [ [[[33631, 47408], [21591, 33838]]], [ 1, 2, 2 ] ]

Boundaray Feasiable Path123_1:
Self = [ [[[-24011, -17138, -27008, 20719, 17594, -31699]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[12282, -32089, 15262, -15868, 112, -3975]]], [ 1, 1, 6 ] ]
Result = [ [[[-11729, -49227, -11746, 4851, 17706, -35674]]], [ 1, 1, 6 ] ]

Boundaray Feasiable Path134_1:
Self = [ [[[-18144], [3546], [15935]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[27600], [13834], [-27711]]], [ 1, 3, 1 ] ]
Result = [ [[[9456], [17380], [-11776]]], [ 1, 3, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: sub, Test Case Number: 11
Boundaray Feasiable Path1_1:
Self = [ [[[8383], [12593]], [[-25983], [-29050]], [[12688], [-28346]], [[15838], [-9165]], [[3648], [26827]], [[-10090], [-18225]], [[-13364], [21187]], [[-27423], [-20211]], [[10417], [1352]], [[18573], [31916]]], [ 10, 2, 1 ] ]
Arg_1 = [ [[[-29128], [-14541]], [[-10322], [-8094]]], [ 2, 2, 1 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path6_1:
Self = [ [[[22091]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[20023]]], [ 1, 1, 1 ] ]
Result = [ [[[2068]]], [ 1, 1, 1 ] ]

Boundaray Feasiable Path11_1:
Self = [ [[[-31690, -1045]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[-14941, 14428]]], [ 1, 1, 2 ] ]
Result = [ [[[-16749, -15473]]], [ 1, 1, 2 ] ]

Boundaray Feasiable Path16_1:
Self = [ [[[-10374, 1630, -24086]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[-23247, -11775, 32289]]], [ 1, 1, 3 ] ]
Result = [ [[[12873, 13405, -56375]]], [ 1, 1, 3 ] ]

Boundaray Feasiable Path27_1:
Self = [ [[[2810], [18341]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[30019], [5124]]], [ 1, 2, 1 ] ]
Result = [ [[[-27209], [13217]]], [ 1, 2, 1 ] ]

Boundaray Feasiable Path30_1:
Self = [ [[[-18628, -10105, 21032, -22438]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[30870, 13693, -12063, -710]]], [ 1, 1, 4 ] ]
Result = [ [[[-49498, -23798, 33095, -21728]]], [ 1, 1, 4 ] ]

Boundaray Feasiable Path65_1:
Self = [ [[[31923, 12488, -18073, -29244, -13326]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[-1423, -30519, -24492, -28696, 22542]]], [ 1, 1, 5 ] ]
Result = [ [[[33346, 43007, 6419, -548, -35868]]], [ 1, 1, 5 ] ]

Boundaray Feasiable Path73_1:
Self = [ [[[-20837]], [[-2617]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[10095]], [[-4385]]], [ 2, 1, 1 ] ]
Result = [ [[[-30932]], [[1768]]], [ 2, 1, 1 ] ]

Boundaray Feasiable Path87_1:
Self = [ [[[-20456, 10019], [-14070, -21041]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[-19038, -11643], [-10819, -9432]]], [ 1, 2, 2 ] ]
Result = [ [[[-1418, 21662], [-3251, -11609]]], [ 1, 2, 2 ] ]

Boundaray Feasiable Path123_1:
Self = [ [[[6259, -13571, 31598, 22619, 20121, -7991]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[-22687, 25105, 17574, -4380, 11480, 24412]]], [ 1, 1, 6 ] ]
Result = [ [[[28946, -38676, 14024, 26999, 8641, -32403]]], [ 1, 1, 6 ] ]

Boundaray Feasiable Path134_1:
Self = [ [[[20324], [22254], [421]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[-26255], [7779], [16797]]], [ 1, 3, 1 ] ]
Result = [ [[[46579], [14475], [-16376]]], [ 1, 3, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: getData, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[28535, 24556, -2059, 6972, -17772, 294], [16899, -17635, 3218, -4859, 4623, 25606], [-10892, -19134, -5663, -1242, -30444, -28397], [18292, 11299, 4341, 4201, -9690, 17720], [-5820, -31547, 23196, -23661, -24107, 7740], [-25211, -16508, 10784, 11162, -32675, 32122]], [[26815, 24182, -25924, -7160, -16674, 25139], [24074, 23353, -5688, 461, 8073, -27246], [2964, -18192, -24662, 30199, -12930, -8113], [-13560, -31122, 20707, -7153, -22362, -20232], [27424, -9328, -19491, 13610, 1563, -9192], [-12323, -4552, -7495, -4526, -850, 9549]], [[-12492, 9384, 5087, 31211, 19228, -23829], [-16627, -24805, 537, 1071, 31891, -12766], [-26205, -3596, 4190, -8350, 11541, -16838], [-1748, -5274, -18454, -13798, 8542, 15801], [-29794, 10096, -29641, -8445, 24647, 13093], [-1880, -3121, -9721, 13833, 11979, -30833]], [[29019, -17648, -18083, -2672, 9055, -14576], [-32311, 22094, -23069, 471, 8127, 12821], [7747, -17728, 21688, -5944, -28307, -14239], [-19200, -19092, 15562, 996, -10242, -22666], [19666, 17522, -2538, 18047, -10024, -8613], [14457, -17108, 9156, 22502, -29813, -31643]]], [ 4, 6, 6 ] ]
Result = [[[28535, 24556, -2059, 6972, -17772, 294], [16899, -17635, 3218, -4859, 4623, 25606], [-10892, -19134, -5663, -1242, -30444, -28397], [18292, 11299, 4341, 4201, -9690, 17720], [-5820, -31547, 23196, -23661, -24107, 7740], [-25211, -16508, 10784, 11162, -32675, 32122]], [[26815, 24182, -25924, -7160, -16674, 25139], [24074, 23353, -5688, 461, 8073, -27246], [2964, -18192, -24662, 30199, -12930, -8113], [-13560, -31122, 20707, -7153, -22362, -20232], [27424, -9328, -19491, 13610, 1563, -9192], [-12323, -4552, -7495, -4526, -850, 9549]], [[-12492, 9384, 5087, 31211, 19228, -23829], [-16627, -24805, 537, 1071, 31891, -12766], [-26205, -3596, 4190, -8350, 11541, -16838], [-1748, -5274, -18454, -13798, 8542, 15801], [-29794, 10096, -29641, -8445, 24647, 13093], [-1880, -3121, -9721, 13833, 11979, -30833]], [[29019, -17648, -18083, -2672, 9055, -14576], [-32311, 22094, -23069, 471, 8127, 12821], [7747, -17728, 21688, -5944, -28307, -14239], [-19200, -19092, 15562, 996, -10242, -22666], [19666, 17522, -2538, 18047, -10024, -8613], [14457, -17108, 9156, 22502, -29813, -31643]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

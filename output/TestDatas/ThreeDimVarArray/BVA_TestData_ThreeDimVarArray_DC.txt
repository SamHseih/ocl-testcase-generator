Class: ThreeDimVarArray, Method: , Test Case Number: 1
Boundaray Feasiable Path1_1:
Invariant Self = [ [[[28988], [-10130], [20767], [-23462]]], [ 1, 4, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: ThreeDimVarArray, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[-15416], [-15554], [14286], [-10938], [13242], [12083], [10874]]], [ 1, 7, 1 ] ]
Arg_1 = [[[-15416], [-15554], [14286], [-10938], [13242], [12083], [10874]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: add, Test Case Number: 11
Boundaray Feasiable Path1_1:
Self = [ [[[17890, 12663, -23871, -14718, 1440, -3762, -20709, 13759], [-13885, 26242, 29859, 680, 9008, 14052, 29267, 6875], [30108, -7209, -10745, 8820, -5366, 21436, 10050, -8466], [-29151, -8143, 23084, 24872, -3772, -14917, 5487, -6057], [19949, 12014, 21779, -29380, 524, -27866, -13316, 4082], [-15351, -19405, -30740, 31936, 21283, -20385, -1492, -24082], [-14780, 23438, -552, 2750, -9728, 23356, 14061, -13157], [-12739, -30800, 18737, -30106, -7961, 23305, -22168, 11011]], [[-8333, 24036, 10257, -3674, 31976, -10102, -3236, -25962], [-18852, -12305, -3047, -13398, 12090, 16134, -15143, -25315], [-24476, -25857, 24229, 8414, -28212, -25068, -18973, 26334], [-23879, 22378, -20808, -16101, 21798, -11609, -9512, -30156], [7982, 15309, 15259, 20299, -9006, -11597, 9810, 19614], [-9073, -31544, 14020, -11860, -15979, 18118, 3000, 502], [-8581, 11168, 12969, -5572, 14317, -2990, 23916, 6724], [16342, 4075, 12638, -25073, -16019, 12943, 29412, 792]], [[-14379, 26741, -7781, 28901, 19908, -16086, 30170, 20112], [-21966, 31838, -30936, -30506, 2919, 10376, 5610, 9777], [-3135, 29758, -10741, 7176, -13585, 9286, 8038, -8385], [-25093, -6808, -2202, 31765, 21520, 15768, -28183, -10280], [-11021, 29543, 30490, 19356, 29999, 16081, -8030, -2620], [-16994, 27800, -25794, -16579, 20230, 7616, -7498, -19850], [-29671, 21309, 24398, -21399, -6698, -20066, -25049, 18650], [14573, 29734, 1148, -25456, -28693, -32231, 7757, -3632]], [[-29055, -21189, 20018, 766, 30680, -17132, 23459, 14000], [-4490, 15371, -24799, -9964, -31258, -5323, 27033, 5128], [28134, -30239, -9525, 1861, -6814, -20794, -26492, -15839], [13415, 22804, 6177, 22550, -13223, -23031, -6755, 4629], [3642, -25037, 27146, 126, -11280, -9581, 32734, -2627], [5828, 13455, -5718, -27920, 26136, 18268, 27805, 3933], [30975, -30908, -10534, 30898, 25717, 32296, -4854, 21441], [-6515, 24597, 15988, -18553, 22508, -504, 1124, -29049]], [[25025, -23735, -29855, 7019, 6419, -1327, 854, -23636], [-12798, -24772, 22630, -27237, -28359, 9347, -7459, 9678], [3506, -4419, -27958, -9635, 21534, 16987, 13946, -32102], [7269, 3329, -18739, 9175, -1283, -24473, 21314, 7691], [974, -9390, -3912, -20628, -20503, -9214, 1918, 5023], [-2318, 13477, -23951, -659, -22659, -17204, -25113, 10257], [2837, 21715, -11510, -8358, -2094, 9249, 353, 9868], [-10432, -32145, 3101, -20158, 4520, -5824, -7439, 9121]], [[-9815, -10275, 31022, 8698, -26603, -14398, 7946, -4138], [-30417, 20248, -9566, 10414, -13576, -18523, 28200, -2499], [-20415, -20367, -24736, -175, 19939, -29666, -2686, 3810], [-16970, 22498, 18640, -24572, 22034, -9802, -5503, 14056], [17184, 28807, 5863, -6436, -6345, 3590, -11809, -22688], [20018, -17857, 31976, 28767, -25678, 20816, -8297, -5887], [-29, 12335, 2531, -9446, -2423, -30772, -7362, -32683], [-14118, -24733, 2436, -5638, -19994, -13710, 4596, -6674]], [[-7579, 9676, 6335, 22786, 14483, -16932, -1508, -24483], [31290, 32238, -29375, -11087, 2846, -10853, 25702, -524], [15951, 30760, -14818, -14659, -9726, 24014, 9676, -27619], [23485, -24937, -275, -1358, 25260, 2893, 25805, -193], [-375, -9302, 2233, -12151, 19102, 25575, 4901, -4711], [25817, 6878, -29659, -18070, -20823, -20360, 16987, -697], [18849, -21888, 28489, 15361, -24664, 7913, 27734, 2486], [-25980, -5896, -27471, -27712, -26692, 945, 28615, 18893]], [[-4179, 27525, 5812, 28671, 2930, -23120, -4578, 23986], [-31628, -13321, -4116, -13802, 16550, -19222, -27917, -3574], [7543, 17632, 3360, -1189, -24853, -30131, 15061, -25603], [31425, 21630, 17333, 12846, 2547, 18004, -19511, 30016], [5980, -6438, -15877, -7458, 32270, 2277, 16439, 21393], [-10821, 21593, 11332, -21849, -25651, -13, 10261, 31532], [29440, 32499, -27787, 1113, -8919, -3090, -16548, 32668], [-30514, -16262, 26819, 1644, 30395, -18261, -515, -8578]], [[3882, 31103, -27892, 20583, 17827, -232, -31385, -6933], [4409, -29876, 20742, 21053, -2707, 21933, -3430, -891], [-2960, -10759, 852, -22505, 17199, -32021, 6408, 9688], [26993, 10166, 23742, -18308, 20131, 6744, -19752, -30401], [4799, 18805, 4715, 25358, -20112, 23997, -9243, 22192], [-7273, -17412, -25327, -27458, 6709, -9285, -26667, -17053], [14981, -20693, 3950, -18005, 19087, 9022, 21007, 13486], [28768, -21443, -19037, -17247, 19339, 18709, 30467, -10578]]], [ 9, 8, 8 ] ]
Arg_1 = [ [[[-17881, -804, -32067, 9088, 16350, -4615, 8389, 5677], [10198, -19240, -1295, -23823, -31971, -30048, 12648, 377], [21389, -26910, -10860, 18064, 31507, 23371, 29649, -9357], [-23462, 31432, -19198, 8634, -29046, 3099, -9040, -2512], [24238, -8401, 31085, -26096, -8072, 3167, -3502, 7776], [-330, 8505, -29157, 21814, -3006, -25391, -17243, 3486], [1447, 15310, 14229, -13392, 32231, -26919, -2495, -24596], [9039, -6030, -25428, 31835, -2394, 12519, 19782, 7984]], [[26266, -29401, 7853, -21480, 19929, -6596, 11691, 28986], [23181, 14643, 31306, 12500, 24260, -25881, 17398, 8069], [-3182, 18317, -7006, 5663, -14589, -24286, 17885, 30709], [-26944, 29230, 16393, -16589, -19042, -20583, 144, 21168], [-2925, -15346, 26578, -26894, -24052, -1425, -21889, -6608], [22039, 26073, 31592, -7957, -21029, 19960, 23605, -10392], [25755, 7674, -18063, -12178, 23774, 30878, -8623, 18741], [-29614, 3287, 8617, 30631, -19331, -987, 6690, -7679]], [[17240, -2168, 10378, 147, -14912, 7302, 23721, 4564], [-22388, -32321, -4996, 28579, 20305, 24586, -26385, 19224], [-25374, -14650, -7962, -19629, 25625, -16624, -9033, 19518], [-23062, -1734, -30576, 29207, 18364, -17426, 9692, -17839], [8742, 21139, 21111, -16311, 1952, 11321, -17147, -28943], [7755, 17577, -5136, 26262, -11271, -10264, -26566, 23369], [19030, -4279, -31695, -9737, 19736, -17065, -9725, 13608], [26347, -26315, 1231, 25801, -3550, 28477, 29580, 2915]], [[-25970, 15256, 1766, 14558, 16810, -14206, -24769, -30317], [7792, -21231, -9333, -9034, 4824, -31075, -32335, -19106], [-21347, 13512, -25835, 27331, 4543, 14073, 18506, -12749], [-14728, -26139, 32762, 22125, 29239, -11233, -26310, 24050], [20782, -11678, -32723, 21299, 6210, 20490, 11419, -3151], [24631, -16057, 6856, 4189, -17782, -13780, 20161, -1060], [-20585, 14171, 10144, 5601, -20746, 29701, -1409, -16786], [-24918, -18381, -9119, 26725, 11565, 258, -28199, 23849]], [[-19962, 19014, 25806, -2237, -1451, -15944, 24361, -21411], [7231, 23806, -23965, 29278, -31188, -19440, -5653, 26629], [-12152, -1250, -27399, -13947, 27965, 7731, 23007, -23498], [-10461, 24293, 21057, 4405, -23454, 13249, -20111, 31769], [27116, 3255, 2138, 5365, 21977, -10621, -26752, 7913], [-16598, -327, 30997, -15548, 21968, -1854, 10140, -3463], [-19138, 26641, -7417, -21455, -19470, 22275, 8108, 15578], [13011, -25364, -25618, 13153, 28048, 23921, -24754, -1942]], [[16944, 16583, -455, 9096, 11268, 12730, -5826, -4305], [10224, -1454, 19361, 32021, -15354, 30063, 9817, -1069], [-24644, 26321, 267, -13938, 6857, 15611, -401, -22771], [-8915, -4875, 30078, -27313, -5964, -11183, 17100, -25704], [-8576, -27030, 58, -16991, -16513, -31712, 25128, -15902], [18386, -27311, 29015, -9931, 23150, -5239, 25595, -20332], [22694, 3086, -24614, -26135, 32532, -10268, -28884, -16730], [-10666, -30732, -18725, -31194, -275, 31646, -30878, -14863]], [[3297, -22064, -7514, 8648, 27317, -13446, -28672, -11973], [27761, -2127, -4983, 11173, -7378, 9252, 15408, 1927], [-25306, -14303, 24978, 10422, -25505, -16305, 8289, -26193], [-24196, 18517, 21634, -6131, -28183, -24990, -19806, 22523], [-10811, 18987, 14135, -19871, 23967, -27587, 1662, 13118], [-29321, -26129, -1567, 14104, -4978, -24185, -24054, 24561], [-13683, -12470, 23215, 20309, -14910, -28626, 23117, -24225], [10220, -9061, 27332, 11772, 31300, -19945, -10741, -5562]]], [ 7, 8, 8 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path6_1:
Self = [ [[[-20526]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[2753]]], [ 1, 1, 1 ] ]
Result = [ [[[-17773]]], [ 1, 1, 1 ] ]

Boundaray Feasiable Path11_1:
Self = [ [[[-24980, 27047]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[22999, 18280]]], [ 1, 1, 2 ] ]
Result = [ [[[-1981, 45327]]], [ 1, 1, 2 ] ]

Boundaray Feasiable Path16_1:
Self = [ [[[21432, 11055, 6039]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[-16151, -3464, 16923]]], [ 1, 1, 3 ] ]
Result = [ [[[5281, 7591, 22962]]], [ 1, 1, 3 ] ]

Boundaray Feasiable Path27_1:
Self = [ [[[-25800], [14580]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[13896], [29598]]], [ 1, 2, 1 ] ]
Result = [ [[[-11904], [44178]]], [ 1, 2, 1 ] ]

Boundaray Feasiable Path30_1:
Self = [ [[[-10173, 5029, 28189, -10681]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[-3640, 24763, -19532, -19841]]], [ 1, 1, 4 ] ]
Result = [ [[[-13813, 29792, 8657, -30522]]], [ 1, 1, 4 ] ]

Boundaray Feasiable Path65_1:
Self = [ [[[15881, 20258, 13786, -23363, -9265]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[29387, 21294, -29897, 20414, 32533]]], [ 1, 1, 5 ] ]
Result = [ [[[45268, 41552, -16111, -2949, 23268]]], [ 1, 1, 5 ] ]

Boundaray Feasiable Path73_1:
Self = [ [[[20565]], [[-7805]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[22285]], [[-18792]]], [ 2, 1, 1 ] ]
Result = [ [[[42850]], [[-26597]]], [ 2, 1, 1 ] ]

Boundaray Feasiable Path87_1:
Self = [ [[[-378, -15480], [-28785, -13609]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[-8599, -2786], [-21054, -24211]]], [ 1, 2, 2 ] ]
Result = [ [[[-8977, -18266], [-49839, -37820]]], [ 1, 2, 2 ] ]

Boundaray Feasiable Path123_1:
Self = [ [[[-32713, -32354, -31673, 16191, -11805, 22508]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[2177, -14666, 1212, 7496, 20789, -14429]]], [ 1, 1, 6 ] ]
Result = [ [[[-30536, -47020, -30461, 23687, 8984, 8079]]], [ 1, 1, 6 ] ]

Boundaray Feasiable Path134_1:
Self = [ [[[3382], [13308], [18854]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[-23077], [-32249], [-10377]]], [ 1, 3, 1 ] ]
Result = [ [[[-19695], [-18941], [8477]]], [ 1, 3, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: sub, Test Case Number: 11
Boundaray Feasiable Path1_1:
Self = [ [[[-28353, -1659, 14860, 20702, -10609, 26337, -396], [-20256, -13515, -4281, 22347, -32463, -27957, 25292]], [[29357, 21592, 20721, -17049, -22584, 8362, 32306], [-23254, -22239, -12833, 11169, -14195, -10472, 16458]], [[-23270, -21295, 9292, 22258, 25211, 24421, -24264], [19390, 15358, 24108, -25935, 5317, 32546, 28912]], [[26430, -21822, 3102, 25006, 5166, -14374, -13328], [-20116, -29560, 31917, 822, -27994, -3780, 14770]], [[7606, -31650, 2614, -3473, 29438, -8015, 5898], [-23402, -15200, -11674, -1257, 25487, -5864, 8979]], [[-3418, 31533, -469, 372, 18925, -23874, -8352], [-26215, 28692, 21715, -5243, -26182, 7998, 3638]], [[-20386, 5955, -29624, -23777, 29501, -26582, 340], [-12459, -20211, 2341, -8340, -21730, -21366, 14574]], [[-6633, -16709, -360, 23402, -63, 10849, -1253], [-31408, 31566, -26509, 9639, -16443, 30720, -27050]], [[-13271, 23052, 30306, 19054, -28409, 25863, -10368], [-23270, 2098, 29955, -11862, 11257, -32167, -6335]], [[7337, -25720, 20826, -27394, 6535, 32026, 16299], [21086, 22108, 2797, 21491, 1406, 1507, -27192]]], [ 10, 2, 7 ] ]
Arg_1 = [ [[[-21111, 15472, -32091, -24096, -4109, 5773, -8733], [-2949, 13681, 11478, 32461, 334, 11181, -26913]], [[4421, -29725, 25377, 2157, -11986, -16153, -16199], [15014, 21250, 28873, 2115, 5939, -24459, -26689]], [[32412, -22153, -17649, -22956, -16496, -7272, 21299], [6307, -4929, -8945, -13221, 17100, 17990, 6096]], [[21789, 5274, -9074, 14273, -1995, 7409, -23093], [14511, -9274, -30063, 8440, -5998, -30132, 14977]], [[-10559, 14922, -32394, -21120, 30482, 28887, -585], [-29678, -19932, 12180, 21785, 22021, -17063, 30807]], [[-13168, -26629, 18694, -17485, -24489, -16378, 15237], [31719, 11241, 20434, -735, 20422, 29483, 12113]]], [ 6, 2, 7 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path6_1:
Self = [ [[[11918]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[27328]]], [ 1, 1, 1 ] ]
Result = [ [[[-15410]]], [ 1, 1, 1 ] ]

Boundaray Feasiable Path11_1:
Self = [ [[[-17500, -24971]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[-19669, 17504]]], [ 1, 1, 2 ] ]
Result = [ [[[2169, -42475]]], [ 1, 1, 2 ] ]

Boundaray Feasiable Path16_1:
Self = [ [[[7440, 29340, 17734]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[29360, 32739, -25958]]], [ 1, 1, 3 ] ]
Result = [ [[[-21920, -3399, 43692]]], [ 1, 1, 3 ] ]

Boundaray Feasiable Path27_1:
Self = [ [[[2101], [12489]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[29168], [30107]]], [ 1, 2, 1 ] ]
Result = [ [[[-27067], [-17618]]], [ 1, 2, 1 ] ]

Boundaray Feasiable Path30_1:
Self = [ [[[-12684, -8547, -978, 23944]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[21829, -17756, 28001, -18588]]], [ 1, 1, 4 ] ]
Result = [ [[[-34513, 9209, -28979, 42532]]], [ 1, 1, 4 ] ]

Boundaray Feasiable Path65_1:
Self = [ [[[-28545, 20387, -11718, -17217, 27667]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[30351, -29007, -2934, -25652, -7083]]], [ 1, 1, 5 ] ]
Result = [ [[[-58896, 49394, -8784, 8435, 34750]]], [ 1, 1, 5 ] ]

Boundaray Feasiable Path73_1:
Self = [ [[[17363]], [[22621]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[-18457]], [[-6849]]], [ 2, 1, 1 ] ]
Result = [ [[[35820]], [[29470]]], [ 2, 1, 1 ] ]

Boundaray Feasiable Path87_1:
Self = [ [[[-7190, -28754], [-24360, -24264]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[20038, -23028], [-2424, -5686]]], [ 1, 2, 2 ] ]
Result = [ [[[-27228, -5726], [-21936, -18578]]], [ 1, 2, 2 ] ]

Boundaray Feasiable Path123_1:
Self = [ [[[-22641, 9147, -15135, 27816, 7200, 30369]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[8264, 29690, -19440, 30991, -21961, 31846]]], [ 1, 1, 6 ] ]
Result = [ [[[-30905, -20543, 4305, -3175, 29161, -1477]]], [ 1, 1, 6 ] ]

Boundaray Feasiable Path134_1:
Self = [ [[[-3474], [31926], [-27924]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[-13118], [-28058], [15203]]], [ 1, 3, 1 ] ]
Result = [ [[[9644], [59984], [-43127]]], [ 1, 3, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: getData, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[-6229, -28142, 4942, 22945, -21553, 22455], [-31745, 30055, -9536, 13722, 11790, 26227], [-4213, 3293, 8515, 14296, 5586, 31210], [24870, 25367, -3141, 32126, -8830, -25585], [-26243, -27515, 23676, 14148, 15121, -30220], [-7786, 25040, -17083, -18969, -30329, -23468], [-12212, -15971, -2669, -14450, -15032, 16313]], [[-13430, 12231, 4777, -6347, 23942, -19929], [25601, -5882, 13697, 14088, 22349, -6572], [1791, -17431, 26886, -30660, 14561, 13068], [-23068, 8903, -9847, 22148, -19584, 20180], [7549, -24188, -15199, -22438, -28029, 18358], [-5937, -19794, -12895, -13286, 22461, 7852], [-11454, 7297, -17663, 31605, -4225, 30391]], [[-6264, -17982, 23633, 21888, 17434, -22794], [-29898, -9122, -26489, -30102, -15223, 95], [-31532, 27756, 3866, 9279, -27914, -3138], [8644, 14341, -1757, 21187, -25816, 30279], [15377, -15169, 21173, 28741, 25832, 345], [-21422, 3184, 20008, 20953, 18285, 18067], [5723, -12816, -6430, -490, -16177, 6242]], [[-11887, -27365, 27436, 32419, -5834, 22161], [20146, 1998, -2054, 19735, 14467, 3118], [12154, 22211, 18153, 26856, 13549, -18468], [-14974, -3051, 873, 8062, -24592, -13114], [-2569, 25929, 29024, 5599, 25686, -11219], [-22072, 21387, -15927, -6291, 26863, 28695], [-23604, -16219, -31912, -26202, 6953, -11239]], [[7078, 619, 6579, 11726, 9852, 3331], [-13141, 12249, 6228, -16259, -1956, -9368], [10975, -7486, 10041, 27165, -15083, -2079], [-17253, 28259, -30214, -14327, -30645, -24079], [-2198, 30604, 6134, 19587, -802, 21880], [7340, 25116, -24500, -24002, -18628, 5588], [11246, -8721, -12715, -10418, -27455, 1744]]], [ 5, 7, 6 ] ]
Result = [[[-6229, -28142, 4942, 22945, -21553, 22455], [-31745, 30055, -9536, 13722, 11790, 26227], [-4213, 3293, 8515, 14296, 5586, 31210], [24870, 25367, -3141, 32126, -8830, -25585], [-26243, -27515, 23676, 14148, 15121, -30220], [-7786, 25040, -17083, -18969, -30329, -23468], [-12212, -15971, -2669, -14450, -15032, 16313]], [[-13430, 12231, 4777, -6347, 23942, -19929], [25601, -5882, 13697, 14088, 22349, -6572], [1791, -17431, 26886, -30660, 14561, 13068], [-23068, 8903, -9847, 22148, -19584, 20180], [7549, -24188, -15199, -22438, -28029, 18358], [-5937, -19794, -12895, -13286, 22461, 7852], [-11454, 7297, -17663, 31605, -4225, 30391]], [[-6264, -17982, 23633, 21888, 17434, -22794], [-29898, -9122, -26489, -30102, -15223, 95], [-31532, 27756, 3866, 9279, -27914, -3138], [8644, 14341, -1757, 21187, -25816, 30279], [15377, -15169, 21173, 28741, 25832, 345], [-21422, 3184, 20008, 20953, 18285, 18067], [5723, -12816, -6430, -490, -16177, 6242]], [[-11887, -27365, 27436, 32419, -5834, 22161], [20146, 1998, -2054, 19735, 14467, 3118], [12154, 22211, 18153, 26856, 13549, -18468], [-14974, -3051, 873, 8062, -24592, -13114], [-2569, 25929, 29024, 5599, 25686, -11219], [-22072, 21387, -15927, -6291, 26863, 28695], [-23604, -16219, -31912, -26202, 6953, -11239]], [[7078, 619, 6579, 11726, 9852, 3331], [-13141, 12249, 6228, -16259, -1956, -9368], [10975, -7486, 10041, 27165, -15083, -2079], [-17253, 28259, -30214, -14327, -30645, -24079], [-2198, 30604, 6134, 19587, -802, 21880], [7340, 25116, -24500, -24002, -18628, 5588], [11246, -8721, -12715, -10418, -27455, 1744]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

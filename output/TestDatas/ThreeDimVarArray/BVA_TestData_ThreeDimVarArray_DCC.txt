Class: ThreeDimVarArray, Method: , Test Case Number: 1
Boundaray Feasiable Path1_1:
Invariant Self = [ [[[-32413, 7861, 24216, -24337, -17649, -1791, 32409, 8079, -274, -20725], [25391, 2369, 25086, -19877, 4025, -18653, 980, -29051, -18663, -6102], [16746, -26938, 1469, 28287, 8556, 20145, -24440, -7124, -11408, 31009], [9607, -11592, 4443, 14448, 2152, 25478, -25927, 29718, -21160, -18311], [-2846, -5271, -9748, 11693, 4827, -21710, -648, 3784, -29900, 19337], [32145, 8012, -13042, 7282, 19558, -16218, -741, -7418, -17876, 21176], [3320, -10157, -732, 2387, 16043, -14791, -24229, 2476, 4939, 11947]]], [ 1, 7, 10 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: ThreeDimVarArray, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[-22850, 19683, -16269, -27606], [-18230, -550, 15803, 16233], [-5471, -14119, 17563, -28491]], [[-1621, -23894, 21079, -31176], [-23621, -6290, -30148, 29113], [-23458, -32147, 31849, 16611]], [[-31742, -19646, -18647, 6419], [7504, -14250, -16502, 938], [-31690, -30442, -8883, -24408]], [[17373, 15947, -881, -26796], [26187, -4883, 26614, 2971], [-21008, -16734, 9798, -3537]], [[11745, -7289, -24337, -19150], [21274, -18598, -28090, -23006], [25552, -24441, 30514, 31549]], [[3769, -12305, -21100, -18160], [-25671, -29492, 30920, -2256], [-26358, 830, 29795, 25119]], [[10591, 2551, 31823, 10649], [-21567, 19931, -30539, -446], [-25703, 40, -8786, 18807]], [[-14575, -17419, -4578, -18253], [20027, 12334, -15103, 578], [12863, 3235, 5025, -12683]]], [ 8, 3, 4 ] ]
Arg_1 = [[[-22850, 19683, -16269, -27606], [-18230, -550, 15803, 16233], [-5471, -14119, 17563, -28491]], [[-1621, -23894, 21079, -31176], [-23621, -6290, -30148, 29113], [-23458, -32147, 31849, 16611]], [[-31742, -19646, -18647, 6419], [7504, -14250, -16502, 938], [-31690, -30442, -8883, -24408]], [[17373, 15947, -881, -26796], [26187, -4883, 26614, 2971], [-21008, -16734, 9798, -3537]], [[11745, -7289, -24337, -19150], [21274, -18598, -28090, -23006], [25552, -24441, 30514, 31549]], [[3769, -12305, -21100, -18160], [-25671, -29492, 30920, -2256], [-26358, 830, 29795, 25119]], [[10591, 2551, 31823, 10649], [-21567, 19931, -30539, -446], [-25703, 40, -8786, 18807]], [[-14575, -17419, -4578, -18253], [20027, 12334, -15103, 578], [12863, 3235, 5025, -12683]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: add, Test Case Number: 13
Boundaray Feasiable Path1_1:
Self = [ [[[-9271, 2276, -20098, 23045, 5739, -27093, -4222, -1252, 11679, -26492]], [[-28976, -7516, 31813, -19340, 7546, 9492, 6172, 30024, 31028, 26970]], [[2029, -9382, -21135, 7370, 8000, 3076, 9094, -4920, -9892, -21456]], [[1015, -8026, -28945, -1205, 11616, -31432, -25006, 20196, 15180, 17512]], [[4745, 8230, -32111, 5613, -4408, -3571, -3018, -31549, -6301, 1678]]], [ 5, 1, 10 ] ]
Arg_1 = [ [[[11330, 32205, -9368]], [[31559, 2895, -9622]], [[-6627, 975, -32542]], [[32370, -12950, 8311]], [[-7807, -14196, -2552]]], [ 5, 1, 3 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path2_1:
Self = [ [[[-20776, 24686, 2545, 6120, -17243, -15041, -28248, 1435, 27662, -12007], [-15496, -17150, 13791, 3529, -1192, -21910, -27009, -14227, 2862, -24350]], [[32314, -19841, 14577, -891, 3193, 1073, -8990, -5446, 27093, -10120], [9948, -24322, -28119, -12672, 26431, 30761, 18390, -22098, 9396, -2658]], [[-14874, -16050, 30039, -5073, -20349, -1279, 3985, -5616, -26362, 3809], [-24939, 25830, -516, 364, 18520, -18992, -22783, 25685, -15049, -22594]], [[-10823, -28498, -12720, 19524, 16793, 14474, 1770, -82, -1651, 30484], [-13326, 15299, -17193, -27545, 15843, -25615, 12629, 237, 15263, 14003]], [[13414, -28435, 26908, 32533, -7656, 16082, -5400, -21853, 8507, -3092], [-11756, 17160, -14090, 10378, 22452, 16304, 12531, 16272, -7411, -16304]]], [ 5, 2, 10 ] ]
Arg_1 = [ [[[-16006, 11061, 6444, -11019, 14283, 30232, -10936, 17139, 1232, -18464], [-12164, -2218, 20854, 21287, -18085, 31699, 17569, -27055, -27768, -9632], [-22766, -4313, 17129, -1093, -862, 29864, 6192, 1525, 24555, -8785], [-9947, -3092, -6068, -28041, -25729, -21660, -24933, -23528, -31925, -2708], [-2122, 29675, 32749, -10860, 5713, -28265, -25142, 12024, -31679, 18544], [-5092, -12797, -4820, -3382, 18270, -29301, -29628, -2424, 14727, 18107], [-6346, 5766, 32057, -8067, 13947, -995, -16965, -12205, -8559, 30183]], [[-22325, 24317, 4480, -6105, -15250, -10684, -20027, -24268, 20065, 26766], [-8963, -2965, 10816, -24981, -28398, -6579, -28208, 28194, -595, -9435], [-17173, -27895, -3734, -19061, -5358, -13293, 3601, -11051, -10859, -13128], [-4766, 19088, 31308, -14650, 4544, -24512, -8216, -31059, -12709, -15467], [-13576, 4244, -25769, -8757, -30095, 29137, 18218, -3363, -31203, -15589], [-3673, 1240, -28350, -19450, 8981, -17702, -9587, 14903, -3426, -12005], [15783, 10217, -19333, -23685, -98, 17510, 20579, 19149, 32753, 674]], [[-22148, 5487, -3922, -31692, -29934, 18157, 7832, -8619, -14760, -32050], [873, 7557, 30056, -30412, 9053, 25352, 24856, 29408, -8188, -22807], [-23695, -25464, -29935, 13056, -17791, 26850, 8023, 4397, 13046, -32141], [-28941, -5085, -1797, 31571, 7984, -3102, 22576, -29210, -32124, 9123], [15995, -24880, -16576, 3696, -28889, 16604, 16851, 2556, 5524, -14905], [-24794, 24771, 17953, 8911, -18200, -16676, -7856, -7409, 18742, -26127], [21100, -30598, -5814, -9425, -1270, 3267, -2053, -28707, -9117, 7728]], [[29177, -5888, 23310, 28424, 19218, -22883, -8392, -8720, 26554, -29424], [-10652, -19108, -3846, -29853, -18001, -16121, -29064, -7072, -19252, -3227], [-15628, -15389, -18019, -31740, -8804, 31320, 1823, 24642, 22925, -14189], [31513, 29842, -20031, 32640, -32747, 23730, -20414, 26109, 25974, -21494], [-23591, -29509, -21541, -29793, -6179, 2150, 6702, -9359, -23694, 12930], [-16781, 16526, -13550, 15674, 456, -7733, 32223, -24055, -18126, -12719], [27215, 8798, -9338, 8649, 7126, 17280, 26109, 25928, 2360, -124]], [[-5912, -21975, -21954, -3836, -20018, -3134, -12563, -9013, -11456, -20000], [10198, 29083, 24646, -11056, 2253, -1368, -21758, -31899, -26322, -30746], [-7124, -5902, 21263, 173, -21884, 18757, 18404, 817, 9445, 22782], [-19463, 26653, 30025, 21703, 5224, 29077, -2625, -4510, 19319, -28208], [16451, 7355, -8319, -12264, 2064, -17291, 21095, -303, -5950, -14832], [-2847, 26594, 17338, 4058, -31805, 6898, 16449, 16733, 17435, 3201], [1730, 21554, -2071, 5702, 2191, 17357, -14753, -21908, 5224, 19761]]], [ 5, 7, 10 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path4_1:
Self = [ [[[16959, -23304, -17195, -25420, -4264, -14097, -6969, 25066, -10029, -28552], [-30435, -32288, 11377, -11592, 22172, -27133, 20411, -4556, -3195, 24240], [26946, -16283, 2115, 6024, -28924, 30881, 13633, -12884, -17518, -31568], [-10959, 9018, 29407, 19006, 28010, -24063, -16179, -26725, -3025, -4078], [3105, 13157, -4915, 29473, -20938, 18607, -31355, -32085, -24418, 6201], [-7075, -32410, -26625, -30759, -7322, 7745, 24216, -25384, 17867, 26934], [-28908, -6110, 8283, -30412, 26442, 7200, -16683, 1851, -24630, -16380], [27071, -19499, -7366, -24891, -16357, 16542, -15615, 12575, 13659, -15431], [22609, -6527, 11527, 23741, 7707, 3711, 997, -29409, 14453, 4983], [-31751, 19852, 9196, -16970, -1402, -18483, 18375, -10823, -17227, 25505]], [[16168, -1696, 3272, 22508, 5163, 8978, -2607, 26898, 23817, 18415], [14359, 15480, 24889, 20017, 8494, -24591, 30123, -16501, -19925, 8222], [-29279, -1544, -7588, -25728, -7524, -26809, 14457, 27177, 30251, 15117], [10539, -13880, -20850, -10967, -8578, 7741, 17014, 7748, 21996, 20707], [-1071, -15875, -21221, -7771, -29704, -4479, -29960, 26246, 26168, -14753], [-21411, -17324, -2795, -20464, 11690, -21593, -15429, -14305, 295, 28292], [24371, -5888, -23104, 15725, 29584, -22490, -6232, 15065, 20077, 6417], [-24746, 15962, 23653, -2219, -23004, -17122, 16664, 28360, 19065, 9390], [-18608, 22760, 26887, 5340, 16068, 3563, -10198, 2444, 32007, 20784], [15083, 13684, 4750, -45, -27712, 12248, -15586, -26778, 9226, -8044]], [[-21009, -2646, 25639, -19249, -22587, 2352, -18785, 11609, -7756, -18456], [26150, 12655, -14966, 16712, 22953, -18494, 32546, 24458, 22951, -14543], [-19238, 16481, -23157, 573, -25082, -4738, -5846, -14149, -3029, 32275], [-24751, -9511, 13698, 29673, -6599, -25629, 25102, -17210, 9067, 30239], [-16193, 31701, 17448, 30258, 14077, -16654, 6999, 14205, -31308, -30083], [-15236, 16486, 23194, 21335, 6627, 31721, -8076, 8420, 26312, -25039], [31018, -24904, 15277, 213, 30181, -24413, -2853, -1507, 32189, -15676], [8388, -17747, 3580, -26303, 30758, 11330, 16718, -5838, 30252, -30486], [-17375, -20296, 4852, 15812, -28743, 16777, -18933, -32666, -12936, -863], [-24918, -6045, -5074, 8816, -30847, -21955, 2089, -14977, -25058, -8758]], [[-28375, -10558, -20767, 22817, -20783, 26294, 12534, 19369, 30954, -16790], [-4741, -23711, -22062, -13109, 1699, 28117, 30159, 6113, 13939, 2251], [-31062, -16690, 4855, 25385, 2261, 25952, 19516, 4732, 28415, 19899], [30844, -8264, -14818, -19148, -15878, 2952, 26745, 14257, 24486, 31992], [17318, -6278, -6357, 12589, -7495, -3724, 16035, 18450, -10098, -18934], [17620, -24701, -12455, -22456, 14226, 21987, -9154, -16430, -7152, -12516], [-1850, -10880, 25555, -4471, 831, 24034, -16713, 16139, -3295, 14687], [13393, -10162, 19037, 31293, 32633, 12299, -3753, 16, 4788, 4337], [32404, 6815, 17510, -13165, 24738, 19028, -8307, 7475, -14504, -24025], [-4231, 21050, 1263, -22943, -23362, -8270, -15145, 13935, 25160, 6217]], [[29857, -31879, -11360, 9465, 3384, -4278, 1148, -22946, 29981, 13961], [27786, 22355, -13892, 12811, -31998, 249, 27089, 21494, 17196, 21825], [28381, -8903, -27539, -24108, 9641, 25137, -31571, 22321, 27518, 18524], [-28541, 15913, 22836, 23170, -25808, 1406, 14762, -19198, -23028, -2991], [11517, 30204, -20331, 24089, 32533, 5245, -2649, -28592, 26090, 31840], [16767, -1384, 1265, 20788, -10459, -26087, 9422, 23519, 28380, -5791], [21611, 20676, 7815, 17085, 27144, 15732, -12160, -23993, 14704, -22539], [-11453, 24265, 14370, 30337, 26597, 22640, -3873, -17555, 1260, -16377], [-14028, 10024, -21274, -28531, -388, -9622, 12099, -3449, -6700, -22513], [29838, 30356, 16616, 17433, 1588, -507, -8318, -22835, -15582, 26514]], [[7986, 23496, -25299, -29384, 29199, -2580, 13183, 17584, -14176, 17014], [-12979, -4649, 18665, 852, -24835, -16967, 11244, -28263, -10360, 21146], [30367, -18809, -12905, 4619, 28727, 10599, 29408, 22203, -8427, -29970], [-29354, 30760, 32716, -20986, 21152, -8086, -17762, -28210, 23186, -2819], [18512, 16851, 7320, 5192, -29695, 6065, -16600, -17651, -28326, -7772], [-1043, 26175, 31748, -27066, -30660, 30180, -13208, -13784, -7195, 5508], [-24995, -667, 25616, -19054, 6124, 15931, 30935, -3031, 7559, 1593], [25307, -16220, -21055, 23969, 6560, 74, -30916, 6848, 14926, -6320], [-26261, 23308, -2270, -24016, -6996, 16835, 8432, 7243, 17713, 22119], [-24505, -17437, -4852, -12212, 11893, 27817, 25515, -26513, -18498, -9271]]], [ 6, 10, 10 ] ]
Arg_1 = [ [[[-19014, -12820, -25967, -31366, -20264, -30212, -29473, 10550, 4972, 20704], [-16977, -17682, 21060, 16899, -17397, -11510, 22608, -32010, 13077, -28604], [8790, 25621, -28059, -1017, 4813, 4081, 32350, 14159, -2952, -16412], [18683, 7529, 10809, -3605, -15104, -22781, -10700, 26286, -13326, -4397], [-9581, 32465, 26147, 2714, 2651, -14624, -9127, 10370, 29046, 20476], [-181, 5597, -1506, 19086, 21022, 4671, -9870, -32641, 14856, 251], [31814, -8242, -16410, -17343, 32345, 2384, -26464, 15688, -24500, -26746], [19681, -15377, 6540, -28478, 27128, 28906, 5993, 15233, -1149, 10272], [547, 22970, 2896, 22019, 20372, 30637, 27661, 14054, 9766, 19172], [-19462, -16718, -8847, -9272, 10296, -20553, 9209, 1106, -18077, -20438]], [[17355, 22197, -20484, -9326, -27381, -24833, 8435, 25869, 17548, -13810], [10751, 25714, 13145, -22485, -13508, -3343, 8169, 28822, -29998, 2625], [-8311, -26778, -10919, 3835, 11964, 11496, -26412, -19749, 23656, 17772], [30904, -23307, 20703, 25304, 26735, 24191, 18497, -27142, 25010, -4154], [-29416, -2437, 31194, -30604, 4950, 32368, 10832, 2849, 11005, -3221], [-12362, -1539, -11626, 14933, 31230, -20028, -19196, 9784, -7161, -21078], [13957, 22829, 28582, 20473, -5502, 6619, -3801, -14005, 15613, 4894], [17550, -19576, 17737, -21432, 28609, 32215, 17478, -27651, -5440, -26572], [-12028, 23020, 8790, -1376, 12503, -28093, 26717, -18393, 10318, 888], [-22911, -6509, 3790, -8937, 5652, 15614, -22786, 28290, 17075, -6734]], [[13016, 5524, 22301, 18759, -16992, -19663, -13557, -18556, 32109, 24772], [7076, 11794, 20274, 5923, -5997, 8929, -3345, 19960, 12604, -11855], [32226, -28569, 2044, 13825, -31240, 9471, 31797, -17368, -12754, 3812], [2630, -24666, 16747, -31746, 26221, -26777, -5647, 20529, 26098, 16690], [21215, -31659, -19405, 22307, -27381, 3760, -25654, -23016, 29010, -12488], [2787, 4791, -29924, -21917, 24286, 4666, 19213, -31578, 15139, 12038], [14013, 3633, 27818, -11254, 7150, -4494, 15962, -3354, 4341, 3387], [-11193, -18193, -9820, 15672, 29852, -9350, -30571, -17629, 29683, 14955], [17624, 12930, -12382, 10424, 28320, -26841, 21147, 19376, 13730, 5636], [-15648, -4318, -12785, 30053, 25911, 32637, -27641, 15556, 1784, -18475]], [[-32489, 19637, 3756, -9669, -28501, -13392, -21238, 5901, -23520, -12277], [-22081, -22485, -14485, -28018, 28041, 19760, -13918, 18071, 29112, -18885], [-31024, 7194, -12296, -23797, -27610, -2886, -5321, 377, 17254, -6337], [-10648, -31275, 28122, -6722, -5552, -23089, -21994, 28846, 22707, 7682], [15600, -26628, 22677, -27228, -22382, -21661, -132, 21214, -5857, 8103], [3706, 9911, 25442, 6969, 13493, -2464, 28930, 18427, -19587, 9559], [12061, -4638, 16108, -8489, 4713, -12092, 4888, -12745, 20616, -29131], [-21163, -14782, -10019, -12386, 9626, -27935, -17484, 4055, 27778, -23466], [15447, 16329, -4555, -21277, -31447, -14245, 14786, -13809, -28276, 31122], [-31757, 13391, -28180, 21955, 23532, 12970, -19123, -4682, 5667, 28527]], [[19095, 13875, 2887, -32057, 20519, -28412, 16301, 3209, 20694, -27642], [-24243, -19297, -1654, -10330, 2650, 13680, -16343, -28018, -9189, 13109], [-14553, -27104, -18807, -26162, -13955, -10424, -29206, 14984, 15670, -9933], [30302, -11207, -1131, 30147, 23459, 4743, -27029, 21939, -17279, 14047], [-31948, -12406, 21482, -1579, 12913, -11770, 23879, 19464, -27579, 4264], [-387, -598, 6121, -10916, -6000, 23142, 32429, 13441, 29683, -11195], [-14319, -28711, -11680, 25603, 10981, 32706, -8326, -25047, -32642, 21281], [-6111, 619, 12355, -26794, 3532, 3843, 10079, -2589, 20660, 22466], [-11454, 11100, 18630, 11447, 4971, -18000, -20748, 25768, 1197, 10335], [994, -8878, 30841, 11658, -6756, -8193, 625, 30814, -11327, -32623]], [[-9861, 17024, -23770, 29829, 11443, -1288, -22828, -25423, -4628, -4281], [26880, 9798, -4235, -8269, -9985, 321, -6764, 26979, -25056, -5544], [2060, -2295, 11890, -10435, -32471, 21163, 15907, 8276, 13005, -4049], [21340, 19531, 9114, -22956, -22888, -4375, 3673, 25881, -2294, -13134], [20851, 19826, -31152, -492, -14110, -29585, -28383, -32239, -23989, -13613], [-4382, -29519, -11418, 27169, 119, 17953, -24921, -8713, 5349, 8882], [-12039, -8476, -21853, -22196, -24241, 26498, 19798, 4295, -28659, 30207], [-29155, -8494, 22526, 21855, -17598, 10428, 11918, -25563, -13967, 6762], [15107, -10762, -16135, 19676, 7611, 22071, -14809, -135, -17254, -31061], [29642, -31806, 8486, -499, -30230, 27558, 6017, -26647, 14966, 27805]], [[21650, 10349, -251, 16259, 4895, -13678, 7014, -14888, 19636, 8181], [24009, 3515, 12677, 104, -30, 25168, -10965, 17282, -14001, -1356], [23376, 13844, 15628, -24332, 25703, 10710, -24612, 23530, 13368, -11812], [22568, -12024, -2832, -21596, -15319, 20445, 10258, 19501, 9307, 19645], [-14305, -6801, -11115, -22520, 1221, 318, -32486, -12264, 29519, 31845], [-17669, -2966, -19685, 1439, -28771, 5775, 3065, -6325, 27294, 6052], [17420, 9768, -9408, -10768, -9672, -18376, 24674, -11602, 8478, -27910], [-18787, -26019, -1690, 25826, -1988, 18831, -25741, -1110, 27840, 8922], [-27779, 16603, -20767, -22913, -3660, -27067, -6234, 30144, -9745, -26623], [9859, 26974, 12339, -15090, 30704, -32291, 5495, 28925, 12318, 24718]]], [ 7, 10, 10 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path9_1:
Self = [ [[[-22671]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[16108]]], [ 1, 1, 1 ] ]
Result = [ [[[-6563]]], [ 1, 1, 1 ] ]

Boundaray Feasiable Path14_1:
Self = [ [[[-10416, -26442]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[24650, -11392]]], [ 1, 1, 2 ] ]
Result = [ [[[14234, -37834]]], [ 1, 1, 2 ] ]

Boundaray Feasiable Path19_1:
Self = [ [[[-7229, 3655, 25414]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[-5380, -6666, -16165]]], [ 1, 1, 3 ] ]
Result = [ [[[-12609, -3011, 9249]]], [ 1, 1, 3 ] ]

Boundaray Feasiable Path30_1:
Self = [ [[[2937], [-22437]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[209], [17507]]], [ 1, 2, 1 ] ]
Result = [ [[[3146], [-4930]]], [ 1, 2, 1 ] ]

Boundaray Feasiable Path33_1:
Self = [ [[[4393, -8305, 18249, -24273]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[-6483, 11981, 23755, 21550]]], [ 1, 1, 4 ] ]
Result = [ [[[-2090, 3676, 42004, -2723]]], [ 1, 1, 4 ] ]

Boundaray Feasiable Path68_1:
Self = [ [[[23985, -29103, -24985, -20915, 566]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[-5548, -5479, -123, -30496, -28392]]], [ 1, 1, 5 ] ]
Result = [ [[[18437, -34582, -25108, -51411, -27826]]], [ 1, 1, 5 ] ]

Boundaray Feasiable Path76_1:
Self = [ [[[18649]], [[21413]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[22005]], [[8058]]], [ 2, 1, 1 ] ]
Result = [ [[[40654]], [[29471]]], [ 2, 1, 1 ] ]

Boundaray Feasiable Path90_1:
Self = [ [[[22543, -13392], [16506, -8660]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[-31269, -21344], [13815, -1988]]], [ 1, 2, 2 ] ]
Result = [ [[[-8726, -34736], [30321, -10648]]], [ 1, 2, 2 ] ]

Boundaray Feasiable Path126_1:
Self = [ [[[32290, -16021, 116, 9677, 3948, -31542]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[293, 21880, 19793, 16224, 30218, 20677]]], [ 1, 1, 6 ] ]
Result = [ [[[32583, 5859, 19909, 25901, 34166, -10865]]], [ 1, 1, 6 ] ]

Boundaray Feasiable Path137_1:
Self = [ [[[19625], [16082], [432]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[20317], [-7552], [-10364]]], [ 1, 3, 1 ] ]
Result = [ [[[39942], [8530], [-9932]]], [ 1, 3, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: sub, Test Case Number: 13
Boundaray Feasiable Path1_1:
Self = [ [[[-31137, 27874, 27141, -31624, 23115, -1508, -26598, 24304], [-3305, 12975, -10064, -23008, 21569, -9691, 30064, -28867], [-7946, 3536, -20023, 20570, 24317, 21524, -17545, 27325], [-14454, -3808, 22305, -27758, 23951, -20475, 25809, 15252], [21646, -2343, -27146, 4583, -3641, -23255, -1032, 506], [17552, 27319, 7683, 6981, -496, -12672, -15109, -28644], [-18796, 7793, 11390, -12050, 14040, -5654, -4136, -202], [21831, 11274, 20, -3571, 23780, 22537, 7149, 21387], [16715, 9047, -14269, -22798, -28165, 5779, -9021, 4461], [-10236, 21032, 26020, -20325, -17814, 24012, 31373, 5851]], [[8527, 17393, 14473, -7005, 30176, -18524, 8964, -20673], [16480, 1748, -23348, 7190, -32410, -15949, -15675, -7169], [-24569, 9468, 19296, 19820, -14564, -10494, 9274, 5183], [-20856, -11661, 2582, 24961, 26812, -26866, 8374, 17662], [-17366, -780, 13798, 26881, -30527, 11843, 27677, -7665], [-26294, 16223, -19142, 8731, 19105, -32536, 31819, -20011], [7849, 28064, 27592, -20227, -10559, 4940, 21354, -5735], [-6088, -27988, -22729, 4651, -13696, -17454, 19139, -28815], [-30311, 18460, 11497, -16255, -5178, -22159, -4363, -3972], [31058, 20885, 16458, 20673, 17657, -31766, 6654, 5898]]], [ 2, 10, 8 ] ]
Arg_1 = [ [[[-6557, 7479, 18934, -29113, -2467, 856, -7500], [11387, -12245, 3783, -1021, 22780, 28329, 17514], [12537, -8465, -23592, -18887, -11031, 21166, 27560], [-27515, -10030, -26974, -20856, -27443, 5687, 5925], [-27689, -7823, -1229, 21856, -8445, 31087, -2513], [5565, 5039, -16122, -30490, -22473, -24759, -8614], [24062, 14871, -1049, -23174, 13304, 24635, -29858], [19099, -31665, 7976, 14452, 3248, 27768, -4271], [-11813, 4979, -25855, -11011, -11185, -2497, 32605], [6601, 31473, -8329, 24847, -14406, 13982, -14862]], [[28132, 14771, 5828, -12682, 11928, -14766, -30152], [-10439, -15818, -10226, -25571, -14137, -19803, -24551], [25816, -568, -14103, -5758, -27213, 17039, 30070], [-30008, -15857, -32384, -26390, -15123, 14775, -18678], [4095, -25852, -11234, -10707, 7017, -8572, -15339], [-21350, -26182, 31078, 27546, -19212, -9577, 4236], [-14551, -10034, -482, 3244, -14350, -4923, -26346], [849, -2787, -27881, -21849, 20299, 26763, -28027], [-25061, -32099, 24949, 29980, 6386, 17271, 13848], [7887, -29229, 13656, -16146, 16846, 19332, -17077]]], [ 2, 10, 7 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path2_1:
Self = [ [[[-21684, -26079]], [[-14683, -31818]], [[22846, 32197]]], [ 3, 1, 2 ] ]
Arg_1 = [ [[[9845, -4380], [2400, 15236]], [[32606, 28670], [23027, -17283]], [[-25711, -18052], [-2896, -24508]]], [ 3, 2, 2 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path4_1:
Self = [ [[[27660, -30469, 8406], [747, -23344, 16500], [-20884, 15022, -16281], [-25530, 14430, -31124], [32701, 24763, -5093], [12145, -20497, 31107], [9622, -26370, 17490], [-14796, 20156, 24319]], [[-4552, 27531, -11542], [24459, -1013, 31381], [31347, 27088, 21268], [15978, -16383, 8024], [25277, 29426, 5334], [16819, -17922, -23894], [-16445, 32291, 25209], [-7211, -12820, 31239]], [[-22092, 2740, 31276], [-15677, 30495, -7368], [-27625, 431, 10963], [-4672, 16569, 14787], [-18026, 2899, -14609], [-10825, 23621, 26658], [13349, 30031, -21820], [27132, 23231, 20790]], [[-16626, -32551, -11064], [5181, 26019, -19176], [8513, 29276, -4390], [-20876, 11113, -19525], [4602, -13735, 1194], [-15504, -25311, -26930], [-18862, 28860, -18908], [12788, 22941, 32385]], [[7299, 9335, -13399], [-6591, 1710, 2742], [5808, -28377, 15132], [-18559, 25352, 31913], [-16111, 23203, 30802], [9585, 14775, 18181], [-22322, 3216, -10856], [3686, 21945, 5197]], [[21878, -9871, 1674], [3209, -4147, -21232], [1382, 30447, 22135], [6800, 204, -26654], [23852, -18218, -12075], [22588, -23684, -8916], [12225, -26737, 7181], [-17681, 29221, 17120]], [[13283, 23156, 15259], [20413, 26875, 8335], [-12861, -11019, 30649], [11260, -9138, 4116], [436, 11248, 12832], [-10529, 13481, -16505], [-26230, 27249, -10487], [-8344, -13500, -1345]], [[3622, 21201, 31047], [2330, -13526, -7839], [-31862, -10544, 27565], [32689, -12523, 12593], [-3242, 13281, 17942], [24298, -27929, 6630], [-17206, 30463, 21530], [21209, 9503, 4103]], [[30235, -1833, -25608], [21450, -7802, -25744], [5641, 23444, 13828], [-11592, 10127, 18065], [3355, 14751, -1476], [18128, 29744, 15529], [16289, 25599, 21401], [10667, 20697, -1515]], [[-25376, 16041, -26388], [21709, 14114, 20244], [1425, -12110, -28802], [1417, 7076, 31559], [12434, 28723, -22479], [12969, 1089, -17354], [17751, 15147, 12995], [1737, -14230, -867]]], [ 10, 8, 3 ] ]
Arg_1 = [ [[[31398, -5317, 8684], [-30668, -9518, -23527], [4246, -10129, -27558], [4987, -20708, 31257], [-12874, 17477, 941], [25441, 17862, 6374], [-641, -6269, -6533], [-30251, 9674, -9248]], [[-3222, 9072, 18026], [-30913, 11105, -11880], [-15597, 23650, -27907], [390, 26385, 21747], [25865, -23361, -32379], [3371, 29531, 18104], [-3597, -5810, -22040], [-24998, -26764, 7130]], [[12917, 19862, 7427], [5957, 10035, -12820], [2602, -29119, -18228], [-29065, 7551, -12142], [132, -7040, 18364], [-21813, -5161, -6570], [-5570, -16353, 27917], [10034, -15676, 15609]], [[-28949, -7530, 18162], [25440, 2106, -21851], [-3405, 14918, 15261], [-19789, -18236, 10748], [-17236, 9653, -21566], [-1933, 26608, -20151], [20692, 1006, 26799], [17056, 8800, -9805]], [[6573, 29797, -24550], [-1985, 11963, 2172], [27959, -17169, 23146], [5213, -4916, 23748], [21025, 29687, -18505], [-24819, -27893, -22669], [-23968, -20800, -5085], [-16590, -27140, 22214]], [[25704, 8737, -20342], [8035, 22215, 9198], [17585, -32220, -24856], [-12543, -27196, 13676], [27627, -4808, 8751], [226, -21846, -14912], [-17462, -2197, 21780], [-21442, 11237, 15643]]], [ 6, 8, 3 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path9_1:
Self = [ [[[-20738]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[-24967]]], [ 1, 1, 1 ] ]
Result = [ [[[4229]]], [ 1, 1, 1 ] ]

Boundaray Feasiable Path14_1:
Self = [ [[[2210, -5951]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[26665, 20449]]], [ 1, 1, 2 ] ]
Result = [ [[[-24455, -26400]]], [ 1, 1, 2 ] ]

Boundaray Feasiable Path19_1:
Self = [ [[[-7289, 32197, 4882]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[30071, 5223, 25827]]], [ 1, 1, 3 ] ]
Result = [ [[[-37360, 26974, -20945]]], [ 1, 1, 3 ] ]

Boundaray Feasiable Path30_1:
Self = [ [[[-13980], [21707]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[-28593], [13734]]], [ 1, 2, 1 ] ]
Result = [ [[[14613], [7973]]], [ 1, 2, 1 ] ]

Boundaray Feasiable Path33_1:
Self = [ [[[-3818, -10577, 1110, 9809]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[8073, -13517, -29645, 21541]]], [ 1, 1, 4 ] ]
Result = [ [[[-11891, 2940, 30755, -11732]]], [ 1, 1, 4 ] ]

Boundaray Feasiable Path68_1:
Self = [ [[[19527, 17545, -31482, 17537, -25094]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[27965, 15320, 28721, -12447, 27635]]], [ 1, 1, 5 ] ]
Result = [ [[[-8438, 2225, -60203, 29984, -52729]]], [ 1, 1, 5 ] ]

Boundaray Feasiable Path76_1:
Self = [ [[[-21879]], [[31906]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[-1648]], [[-27221]]], [ 2, 1, 1 ] ]
Result = [ [[[-20231]], [[59127]]], [ 2, 1, 1 ] ]

Boundaray Feasiable Path90_1:
Self = [ [[[344, -19789], [22343, -24296]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[14583, 23636], [-30580, 28579]]], [ 1, 2, 2 ] ]
Result = [ [[[-14239, -43425], [52923, -52875]]], [ 1, 2, 2 ] ]

Boundaray Feasiable Path126_1:
Self = [ [[[-21521, 10505, 4508, -7739, -3480, 465]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[-10387, -12227, 27515, -3344, 26909, 14023]]], [ 1, 1, 6 ] ]
Result = [ [[[-11134, 22732, -23007, -4395, -30389, -13558]]], [ 1, 1, 6 ] ]

Boundaray Feasiable Path137_1:
Self = [ [[[15261], [15021], [2524]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[8262], [-32016], [-3897]]], [ 1, 3, 1 ] ]
Result = [ [[[6999], [47037], [6421]]], [ 1, 3, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: getData, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[[-899, 14236, -7993, -16140, 27530, -17712, 16298], [-3685, -31673, 19570, -7582, -10071, 25525, 17472], [10933, 30731, 22837, -7434, -1267, -6830, 227], [-10445, -15586, -27782, 9742, -16070, -26179, -12200]], [[1494, 32295, 14001, -17440, -23732, 6918, -19941], [-23742, 17993, -32474, -14177, 25603, -19492, 28928], [17542, -16422, -14186, 21015, 23679, 26549, -7794], [-21330, 30796, 30128, 25229, 17431, 10891, 8191]], [[30498, 11258, -27790, 30038, -19317, -27057, -30970], [4514, 22109, -28261, -31955, -21025, 12120, -26982], [24051, 16073, -6773, -3203, -10077, -3038, -13565], [2686, 7620, 2249, 8364, -24801, 8156, -27855]], [[-25795, 14825, 7002, -14658, 16535, 10715, 28525], [21974, -31593, 9019, -18724, -8389, 25110, 1479], [-28638, -19960, -23746, 266, 29701, 11948, -17493], [5495, -2688, 20657, 21297, 30296, -16646, 22277]], [[-13677, -24574, 22650, 30828, 20101, -6194, 29781], [-12366, 6874, -21487, -24348, 30215, 29465, 17673], [29021, 8199, -24444, 17481, 23077, -3827, -18201], [22767, -19638, 8405, 11497, 13237, 22743, -15314]]], [ 5, 4, 7 ] ]
Result = [[[-899, 14236, -7993, -16140, 27530, -17712, 16298], [-3685, -31673, 19570, -7582, -10071, 25525, 17472], [10933, 30731, 22837, -7434, -1267, -6830, 227], [-10445, -15586, -27782, 9742, -16070, -26179, -12200]], [[1494, 32295, 14001, -17440, -23732, 6918, -19941], [-23742, 17993, -32474, -14177, 25603, -19492, 28928], [17542, -16422, -14186, 21015, 23679, 26549, -7794], [-21330, 30796, 30128, 25229, 17431, 10891, 8191]], [[30498, 11258, -27790, 30038, -19317, -27057, -30970], [4514, 22109, -28261, -31955, -21025, 12120, -26982], [24051, 16073, -6773, -3203, -10077, -3038, -13565], [2686, 7620, 2249, 8364, -24801, 8156, -27855]], [[-25795, 14825, 7002, -14658, 16535, 10715, 28525], [21974, -31593, 9019, -18724, -8389, 25110, 1479], [-28638, -19960, -23746, 266, 29701, 11948, -17493], [5495, -2688, 20657, 21297, 30296, -16646, 22277]], [[-13677, -24574, 22650, 30828, 20101, -6194, 29781], [-12366, 6874, -21487, -24348, 30215, 29465, 17673], [29021, 8199, -24444, 17481, 23077, -3827, -18201], [22767, -19638, 8405, 11497, 13237, 22743, -15314]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

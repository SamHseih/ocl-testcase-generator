Class: ThreeDimVarArray, Method: , Test Case Number: 1
Feasiable Path1:
Invariant Self = [ [[[-28698], [-28068]], [[-17978], [30686]], [[15738], [30567]], [[-20023], [23298]], [[-9755], [2192]], [[-238], [4647]], [[5564], [-21161]], [[29615], [31370]]], [ 8, 2, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: ThreeDimVarArray, Test Case Number: 1
Feasiable Path1:
Self = [ [[[-19744], [-10120]], [[22385], [-28977]], [[-13698], [-20929]], [[-9614], [1318]], [[14516], [3122]], [[-9167], [28513]], [[-11478], [8340]]], [ 7, 2, 1 ] ]
Arg_1 = [[[-19744], [-10120]], [[22385], [-28977]], [[-13698], [-20929]], [[-9614], [1318]], [[14516], [3122]], [[-9167], [28513]], [[-11478], [8340]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: add, Test Case Number: 11
Feasiable Path1:
Self = [ [[[224, 10345]], [[3561, -30063]], [[29564, 17944]], [[-4156, -4309]], [[21211, 24840]], [[16976, 7735]], [[-30177, 26826]], [[6953, -30231]], [[-8541, 24357]]], [ 9, 1, 2 ] ]
Arg_1 = [ [[[29347, 19268]]], [ 1, 1, 2 ] ]
Result = IllegalDimensionSize

Feasiable Path6:
Self = [ [[[27735]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[-16264]]], [ 1, 1, 1 ] ]
Result = [ [[[11471]]], [ 1, 1, 1 ] ]

Feasiable Path11:
Self = [ [[[11996, 12327]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[-7098, 29961]]], [ 1, 1, 2 ] ]
Result = [ [[[4898, 42288]]], [ 1, 1, 2 ] ]

Feasiable Path16:
Self = [ [[[26388, 18443, -31845]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[-15791, -24457, -16165]]], [ 1, 1, 3 ] ]
Result = [ [[[10597, -6014, -48010]]], [ 1, 1, 3 ] ]

Feasiable Path27:
Self = [ [[[-7126], [-23799]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[22389], [12788]]], [ 1, 2, 1 ] ]
Result = [ [[[15263], [-11011]]], [ 1, 2, 1 ] ]

Feasiable Path30:
Self = [ [[[25447, -20339, -22690, -27002]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[-22729, -3972, 6298, 1106]]], [ 1, 1, 4 ] ]
Result = [ [[[2718, -24311, -16392, -25896]]], [ 1, 1, 4 ] ]

Feasiable Path65:
Self = [ [[[9346, -30226, -1889, 9764, 5262]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[-11926, 12947, 24721, 2593, -130]]], [ 1, 1, 5 ] ]
Result = [ [[[-2580, -17279, 22832, 12357, 5132]]], [ 1, 1, 5 ] ]

Feasiable Path73:
Self = [ [[[7148]], [[-3390]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[5614]], [[27035]]], [ 2, 1, 1 ] ]
Result = [ [[[12762]], [[23645]]], [ 2, 1, 1 ] ]

Feasiable Path87:
Self = [ [[[-27365, 21381], [741, 23054]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[-12072, 621], [26576, 27395]]], [ 1, 2, 2 ] ]
Result = [ [[[-39437, 22002], [27317, 50449]]], [ 1, 2, 2 ] ]

Feasiable Path123:
Self = [ [[[5953, 27560, -27551, -12703, 10220, 18553]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[22958, -30525, -17630, 1658, -28123, 8975]]], [ 1, 1, 6 ] ]
Result = [ [[[28911, -2965, -45181, -11045, -17903, 27528]]], [ 1, 1, 6 ] ]

Feasiable Path134:
Self = [ [[[-18692], [-22759], [14943]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[27757], [-17164], [9302]]], [ 1, 3, 1 ] ]
Result = [ [[[9065], [-39923], [24245]]], [ 1, 3, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: sub, Test Case Number: 11
Feasiable Path1:
Self = [ [[[-30989, 30160, -22816, 17632, -23161, 4343, 29132, -8853], [-30371, -29954, -25284, -27380, 21907, 8080, -18904, 13237], [3653, -11087, 3951, -25642, 26649, -19631, 13774, -17256], [377, 18521, 2046, 50, 20216, -8453, 2007, -13469], [-4267, -15486, -9118, 23433, 3444, -2912, -11730, 25964], [-22457, -28598, 28980, -30141, -25593, 27435, -30975, -24605], [-17686, -19156, 1626, -9240, -11042, 21481, 9415, -8479], [-17026, 29938, -17228, 20669, 5582, -17464, -7202, -29827]], [[21447, 30891, 19575, 18972, 27004, 19377, 30078, -14672], [-28020, 2363, 11619, -23877, -26406, -26536, 20372, -17135], [-11248, -4881, 5859, -8497, 11272, -10592, 29370, 15989], [11387, -29954, -7690, 8176, 18903, -23804, 425, -21829], [27001, 16057, -3367, 24769, -8150, 28664, -14456, 25639], [19125, -21914, -21633, 19367, 29833, 7243, 21209, 7833], [-23868, -30966, -7546, -3442, 14359, -6661, 17410, -3245], [14064, -22031, 22344, -6157, 14881, -12106, -3733, -8216]], [[-9783, -4604, 6532, 21923, 16316, 19410, -22137, -1577], [-26323, -11251, 18817, 15441, -6187, -31777, 6681, 15192], [-4806, 9383, 26605, -24797, 18100, 26203, 17168, -32674], [1022, 8369, -27035, -5922, -11584, -4346, 30045, 13856], [3333, 17058, 18068, -13229, -14052, 31150, 27259, 27284], [-22617, -6613, -12996, 19681, -26940, -20965, -29566, 10291], [-2834, 14183, 12267, 959, -25805, 11739, 32116, -29908], [27204, 1454, 32567, -639, -31788, -17669, 16819, -15044]], [[-13841, -13628, -19585, -15067, -29899, 4400, 12128, 25005], [-8838, 29725, -15551, 9316, -14364, 12307, -7018, 7204], [21228, 17731, -1033, 17228, -29651, 25924, -13478, -2725], [15890, 3457, -2262, -23506, -3861, -14781, -30622, 30852], [-25949, -32708, 20842, -1357, 14185, -20068, 26186, -8784], [20747, -20386, -20297, 12104, -4429, 2987, -22556, -29900], [27901, -14148, -14093, -17213, -10642, -2289, 20120, -25463], [10509, -15394, -8892, -26390, 22690, -14, -9154, -11150]], [[-23123, 3720, -32336, -838, 15603, -25878, 31113, -24745], [32349, 12155, 25377, -4238, -20235, 18472, 17582, 21850], [-7802, -4554, 18210, -12127, 2571, -8789, -10362, 13296], [26336, 8537, 26483, 27609, -22088, -25487, -8856, 9328], [20422, -30052, -25753, -30626, 20791, 4039, 22185, -25852], [-26080, -7890, -21265, 13812, -19111, -1265, -21356, 22655], [-9700, -26977, 25653, 29815, 4398, 2239, -23913, 681], [4232, 30331, -10739, -32529, -15709, -10857, -30875, 25465]], [[-16657, 15838, -23550, -18756, 13183, 17165, -23955, 31160], [-27239, 1943, 27060, -15738, -27089, 4965, 920, 8990], [-20239, -2004, -29724, -25686, 31242, 6976, -10858, -5400], [-4515, -2508, -8324, 5593, 6583, 28417, 27775, -6468], [-22653, 21808, 14781, -21209, -26560, 23284, 3466, -2944], [-12262, 23794, -1743, -9904, 10211, -23787, -12709, -25598], [1619, -28646, -259, 15402, 2898, -2893, 11423, -3736], [25477, -3794, 9334, 1659, 11635, 5094, 5887, 7769]], [[-22460, 4542, -28746, -23319, 18958, 20335, 2147, -13939], [-30454, -30387, -4254, -5105, 31585, 30348, 9914, -11352], [1418, 9567, 12781, 3387, 10187, -7644, -7742, 5584], [23892, 962, -7037, 27836, 17892, -28317, -2278, -19876], [19192, 13728, -30056, -27104, -13951, -3094, 29269, 31675], [-6272, -23867, 7497, 5380, 17302, 12422, 14532, 4299], [-2015, 14000, 9425, 29560, -110, 530, -10971, -17802], [-8249, -21923, -10425, -15911, -18160, 30910, -23742, -9875]]], [ 7, 8, 8 ] ]
Arg_1 = [ [[[-9134, 25893, -7305, -5465, -7189, -2948, 14859, 8172], [-29353, 19439, -3379, 17021, 19175, -29470, -7757, 14733], [16810, -20146, -14993, -7622, 9321, -7952, 1863, 31433], [19909, 31992, -21994, -22816, 11933, -22541, 28380, -13075], [-10204, -24455, 6650, -18366, 26100, -20670, -22088, -28645], [-29144, -10331, -19855, 16019, -5756, 27821, -835, 25612], [16241, -25224, 8260, -27582, -2319, 8970, -26432, 31301], [13950, 22789, 28654, -26149, -4033, -4463, 2480, 9480]], [[7086, -8791, -30165, 12325, 29103, 12935, -15576, -32565], [-26313, -27056, 29346, -18185, -18365, -26705, 30056, -31006], [-8516, 2735, 3928, 23762, 28186, 7650, 15798, -22265], [-6049, 7305, -7118, -14999, -8712, -31207, -1382, 14818], [-30191, 16979, 28062, -16417, 27744, 29825, 12189, 15465], [785, -15735, 31141, 10617, 16681, -16369, 29978, -3585], [-16038, -20918, -13034, 3184, 18333, -23736, -30075, -31872], [-31346, 8335, 24535, 29949, -11217, -18246, 183, 27466]], [[27753, 1140, -6598, -31393, -27875, -24946, 17427, 17302], [27224, -24393, 29922, -7906, 15238, 9610, -4710, 12229], [-20366, -23219, -32483, -21487, -5934, 24029, 23408, 26911], [-7268, 16204, -11480, 24353, -21024, -10010, 4548, 14516], [-28080, -18913, 10502, -25632, 17747, 21180, -23896, -23507], [-5010, -31093, -32571, 752, 12146, -24620, 25718, -4222], [-1301, 24388, -16310, 8827, -3750, 14790, -18960, -1254], [30732, -28949, -32568, -1272, 12972, 20661, 21202, -13698]], [[12029, 18631, 5371, 15768, 7901, -13803, -709, 30574], [8316, -11289, -29747, -8935, -26574, -5532, 27010, -29599], [5776, 5304, 5007, 29304, 22544, -1852, 25957, -8902], [26582, -23640, 15760, 19023, 15912, 23142, 7648, -18820], [31071, 9619, 15988, -31514, 9367, -20268, -17726, -31816], [19762, 23958, 30712, -13386, -4464, 3207, 9310, -26197], [28032, 21536, -13988, 5419, -11906, 13473, -21444, -3646], [15222, 16541, -10643, 16567, -13189, -3270, -14273, 12113]], [[-1650, 2844, 16805, 1914, 28689, 15738, 729, 23738], [-2721, 17349, 5944, -11138, 15439, 27853, -31933, -25744], [-20408, -22772, 30644, 30369, 13573, -5900, -1432, -10491], [11616, 8380, -14299, 32046, -5537, -11485, -19031, -25052], [31953, 14299, -18460, 17194, 27854, -24662, 16446, -3948], [-23050, -18992, -20271, 24396, 5017, -9668, 13063, -904], [-10506, -6408, -32031, -5926, -19271, 30381, -21205, -14661], [1192, -19442, 26113, 13032, 28361, -20872, -16243, 27544]], [[-8097, -27755, 21013, -1306, 16130, 23909, 3484, -28837], [13954, -23885, 3180, -10144, 1858, -10193, -15003, 9403], [26022, -7354, 23756, 16436, 7766, 23102, 17506, -8389], [18473, -3186, 30771, -876, -182, 29599, 31924, 10127], [22335, -28819, -29735, -15822, 24916, 23888, 9953, 4907], [-29126, -15129, -15614, -7457, -9125, -29720, 14243, 3411], [-20124, -2263, -26430, 14948, 7526, -20849, -21927, 9915], [1930, -21351, -3862, -2471, 9194, 26111, -6201, 21332]], [[29307, -8335, 24731, 24132, -12605, 21361, 20164, -28468], [28048, -1630, -17402, -32150, 17101, 4023, -11537, -7659], [-18583, 5689, -20472, -17810, 12629, 13354, 23712, -22462], [7307, 15970, 26759, -10410, -16393, 10610, 9992, -8], [-10373, 8258, 13245, -19221, 4822, -19227, -27827, 28709], [-6633, -23111, 29064, -7952, 3698, 28184, -26927, 28562], [-17223, 348, -10357, -27886, 926, 14222, 27579, -8343], [-28857, 28823, -4649, 18248, -3355, 28722, 27205, 15736]], [[-7436, 6800, -20560, 3993, 19594, 30216, 31466, -21802], [3563, -4213, -31186, -14154, -4341, 2240, -5352, 27476], [7039, -15407, 5111, -26557, 29864, -17038, 9606, -23236], [3128, 10142, -17380, 16622, 24763, -10480, 14526, -30096], [-9686, 21812, -6414, 19, 16879, -9194, 22679, 29776], [4858, -25566, -13896, 22122, 9571, -24370, 25503, -28298], [22678, 16176, 3575, -5069, 28355, 11174, -4583, 24336], [-1592, 27426, 15669, -30027, -30491, -14542, -31895, -27769]], [[-13122, 18819, 23275, 2081, 31653, -20106, 15303, -25203], [1905, -25445, -4842, -22456, 27266, 2800, 2201, 19158], [15385, -3743, -30293, 277, -23900, -32506, -20347, -4039], [-23447, -30783, -25244, -6316, 10988, 21847, -18563, -5159], [29338, -26897, 19417, 22608, 29790, -29016, -30583, 519], [-22591, -31550, 379, -18077, 21774, -3536, 8054, -12708], [14095, 14683, 580, 30271, -13015, 15409, -1348, -32092], [-3302, 21742, -12664, -9894, 13397, -3211, 21588, 12095]]], [ 9, 8, 8 ] ]
Result = IllegalDimensionSize

Feasiable Path6:
Self = [ [[[18058]]], [ 1, 1, 1 ] ]
Arg_1 = [ [[[5469]]], [ 1, 1, 1 ] ]
Result = [ [[[12589]]], [ 1, 1, 1 ] ]

Feasiable Path11:
Self = [ [[[-29703, -16420]]], [ 1, 1, 2 ] ]
Arg_1 = [ [[[12676, -12388]]], [ 1, 1, 2 ] ]
Result = [ [[[-42379, -4032]]], [ 1, 1, 2 ] ]

Feasiable Path16:
Self = [ [[[-23043, -26380, -8458]]], [ 1, 1, 3 ] ]
Arg_1 = [ [[[30308, -22382, -24840]]], [ 1, 1, 3 ] ]
Result = [ [[[-53351, -3998, 16382]]], [ 1, 1, 3 ] ]

Feasiable Path27:
Self = [ [[[31858], [-16068]]], [ 1, 2, 1 ] ]
Arg_1 = [ [[[-19266], [-18461]]], [ 1, 2, 1 ] ]
Result = [ [[[51124], [2393]]], [ 1, 2, 1 ] ]

Feasiable Path30:
Self = [ [[[-9612, -19297, 8165, -21713]]], [ 1, 1, 4 ] ]
Arg_1 = [ [[[-22485, -20348, 9393, 2917]]], [ 1, 1, 4 ] ]
Result = [ [[[12873, 1051, -1228, -24630]]], [ 1, 1, 4 ] ]

Feasiable Path65:
Self = [ [[[-4574, 27017, 18676, 19957, -7819]]], [ 1, 1, 5 ] ]
Arg_1 = [ [[[5376, 25546, 17062, 30593, -31797]]], [ 1, 1, 5 ] ]
Result = [ [[[-9950, 1471, 1614, -10636, 23978]]], [ 1, 1, 5 ] ]

Feasiable Path73:
Self = [ [[[-30252]], [[-13828]]], [ 2, 1, 1 ] ]
Arg_1 = [ [[[21470]], [[-219]]], [ 2, 1, 1 ] ]
Result = [ [[[-51722]], [[-13609]]], [ 2, 1, 1 ] ]

Feasiable Path87:
Self = [ [[[-1228, 8380], [-5381, 18050]]], [ 1, 2, 2 ] ]
Arg_1 = [ [[[-32494, -23631], [-18781, -25]]], [ 1, 2, 2 ] ]
Result = [ [[[31266, 32011], [13400, 18075]]], [ 1, 2, 2 ] ]

Feasiable Path123:
Self = [ [[[4556, 3688, 8167, -25035, -10989, -25290]]], [ 1, 1, 6 ] ]
Arg_1 = [ [[[-28679, -18503, -9387, 19525, 26129, 10257]]], [ 1, 1, 6 ] ]
Result = [ [[[33235, 22191, 17554, -44560, -37118, -35547]]], [ 1, 1, 6 ] ]

Feasiable Path134:
Self = [ [[[2420], [-2515], [-13402]]], [ 1, 3, 1 ] ]
Arg_1 = [ [[[23626], [23888], [2429]]], [ 1, 3, 1 ] ]
Result = [ [[[-21206], [-26403], [-15831]]], [ 1, 3, 1 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: ThreeDimVarArray, Method: getData, Test Case Number: 1
Feasiable Path1:
Self = [ [[[27000, 9211], [-7914, -5395], [-29128, -4328], [24410, 3546], [9808, -14996], [12163, 23977]], [[-19917, 16679], [17440, 12450], [-23624, 7911], [26581, -30544], [-15087, -14686], [16924, 8617]], [[8007, -14636], [26976, -17296], [1255, 495], [-2084, -29785], [18963, -6014], [-10698, -6984]], [[12189, 21871], [-11921, 2777], [6069, -13019], [14113, 24909], [25946, 21247], [19067, 8130]], [[-4134, 10847], [5578, -7037], [-1377, -360], [9463, 27657], [10957, -29165], [-18095, -23787]], [[-6930, 12564], [8583, 23196], [18760, 25428], [19292, 22463], [-29151, -16886], [-20666, 23056]], [[15041, -2930], [18018, -31060], [8167, -10799], [-27137, 5615], [6146, 2724], [1227, 1592]]], [ 7, 6, 2 ] ]
Result = [[[27000, 9211], [-7914, -5395], [-29128, -4328], [24410, 3546], [9808, -14996], [12163, 23977]], [[-19917, 16679], [17440, 12450], [-23624, 7911], [26581, -30544], [-15087, -14686], [16924, 8617]], [[8007, -14636], [26976, -17296], [1255, 495], [-2084, -29785], [18963, -6014], [-10698, -6984]], [[12189, 21871], [-11921, 2777], [6069, -13019], [14113, 24909], [25946, 21247], [19067, 8130]], [[-4134, 10847], [5578, -7037], [-1377, -360], [9463, 27657], [10957, -29165], [-18095, -23787]], [[-6930, 12564], [8583, 23196], [18760, 25428], [19292, 22463], [-29151, -16886], [-20666, 23056]], [[15041, -2930], [18018, -31060], [8167, -10799], [-27137, 5615], [6146, 2724], [1227, 1592]]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

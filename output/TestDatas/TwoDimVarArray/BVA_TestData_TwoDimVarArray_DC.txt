Class: TwoDimVarArray, Method: , Test Case Number: 1
Boundaray Feasiable Path1_1:
Invariant Self = [ [[-31692, 2380], [-24559, 27233], [16447, 28691], [-24430, 18254], [15082, 26134], [-10280, -22490]], [ 6, 2 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: TwoDimVarArray, Method: TwoDimVarArray, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[7740, 5793, -32606, -9298, -5874, -22819, -1821, -9118, -22652], [-11730, 14115, -22524, 18565, 21042, 19950, -16715, -3074, -3415], [-12624, -5507, 25261, 16268, 26434, -21145, -4387, -4726, 14910], [18356, -12476, 20665, 27809, -4436, 11410, 11033, -26012, -16061], [-31423, -23034, -24130, 17413, 9973, 3799, -29480, -14816, 13048], [9865, 11946, 30583, 17736, 9951, 2899, -17514, 9885, 32315], [9786, 25889, 25559, 8829, -30051, -6323, 7254, 10362, 27156], [-21350, -25322, 8727, -25543, 26728, 9174, -10258, -31205, 18599]], [ 8, 9 ] ]
Arg_1 = [[7740, 5793, -32606, -9298, -5874, -22819, -1821, -9118, -22652], [-11730, 14115, -22524, 18565, 21042, 19950, -16715, -3074, -3415], [-12624, -5507, 25261, 16268, 26434, -21145, -4387, -4726, 14910], [18356, -12476, 20665, 27809, -4436, 11410, 11033, -26012, -16061], [-31423, -23034, -24130, 17413, 9973, 3799, -29480, -14816, 13048], [9865, 11946, 30583, 17736, 9951, 2899, -17514, 9885, 32315], [9786, 25889, 25559, 8829, -30051, -6323, 7254, 10362, 27156], [-21350, -25322, 8727, -25543, 26728, 9174, -10258, -31205, 18599]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: TwoDimVarArray, Method: add, Test Case Number: 11
Boundaray Feasiable Path1_1:
Self = [ [[-23222, 279, 1508, 4409, -13502], [29634, 23295, 14289, 10636, 22903], [-3756, -11923, 2482, 10086, -1307], [-230, -364, 28254, 21308, 6351], [-3870, -17890, -28570, 12614, 25899]], [ 5, 5 ] ]
Arg_1 = [ [[16617, 29684, 10098, -10451, -31952], [11218, 14574, -3702, -2647, -20566], [-22051, 15132, -23057, -14236, -29003], [-21959, 12143, 22750, -4911, 6937], [-24583, -18620, -22300, -2366, -32179], [-17835, -3195, 4942, 31856, 2124], [-4945, -8374, -24730, 18869, 19539], [-17522, -18377, 29002, -18041, -4679]], [ 8, 5 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path4_1:
Self = [ [[-23482]], [ 1, 1 ] ]
Arg_1 = [ [[22975]], [ 1, 1 ] ]
Result = [ [[-507]], [ 1, 1 ] ]

Boundaray Feasiable Path6_1:
Self = [ [[25939, 5033]], [ 1, 2 ] ]
Arg_1 = [ [[-18299, 10644]], [ 1, 2 ] ]
Result = [ [[7640, 15677]], [ 1, 2 ] ]

Boundaray Feasiable Path9_1:
Self = [ [[-24346, 26429, -15505]], [ 1, 3 ] ]
Arg_1 = [ [[-16851, 448, 20021]], [ 1, 3 ] ]
Result = [ [[-41197, 26877, 4516]], [ 1, 3 ] ]

Boundaray Feasiable Path12_1:
Self = [ [[17311], [3300]], [ 2, 1 ] ]
Arg_1 = [ [[10879], [20526]], [ 2, 1 ] ]
Result = [ [[28190], [23826]], [ 2, 1 ] ]

Boundaray Feasiable Path14_1:
Self = [ [[-10009, 10051, -11382, 13079]], [ 1, 4 ] ]
Arg_1 = [ [[-14835, -9436, 13661, 30471]], [ 1, 4 ] ]
Result = [ [[-24844, 615, 2279, 43550]], [ 1, 4 ] ]

Boundaray Feasiable Path23_1:
Self = [ [[-3046, -27170, 9156, 11494, 6396]], [ 1, 5 ] ]
Arg_1 = [ [[-25615, 8875, 22344, -888, 25437]], [ 1, 5 ] ]
Result = [ [[-28661, -18295, 31500, 10606, 31833]], [ 1, 5 ] ]

Boundaray Feasiable Path32_1:
Self = [ [[11436, -21575], [-2176, -5867]], [ 2, 2 ] ]
Arg_1 = [ [[-23173, 11954], [26855, -20963]], [ 2, 2 ] ]
Result = [ [[-11737, -9621], [24679, -26830]], [ 2, 2 ] ]

Boundaray Feasiable Path39_1:
Self = [ [[15318, 5320, 9570, -2566, 2020, 13986]], [ 1, 6 ] ]
Arg_1 = [ [[5378, -29760, -17413, -10790, -15883, 18034]], [ 1, 6 ] ]
Result = [ [[20696, -24440, -7843, -13356, -13863, 32020]], [ 1, 6 ] ]

Boundaray Feasiable Path44_1:
Self = [ [[-5912], [-10168], [13113]], [ 3, 1 ] ]
Arg_1 = [ [[-14248], [-2691], [7676]], [ 3, 1 ] ]
Result = [ [[-20160], [-12859], [20789]], [ 3, 1 ] ]

Boundaray Feasiable Path67_1:
Self = [ [[-5725, -19214, 21142, 26156, -10850, -25436, -3516]], [ 1, 7 ] ]
Arg_1 = [ [[-12244, 5438, 26179, -23509, -18729, -20004, 8617]], [ 1, 7 ] ]
Result = [ [[-17969, -13776, 47321, 2647, -29579, -45440, 5101]], [ 1, 7 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: TwoDimVarArray, Method: sub, Test Case Number: 11
Boundaray Feasiable Path1_1:
Self = [ [[-2535, 26803, 8331, 16900, -2424, 6172, 32300, -9923], [-32683, -28155, 22832, -16502, -16377, 2951, 15530, -8814], [18104, -22839, 14253, -13372, 25694, 10108, 24969, -27336], [-31621, 2163, 21709, 31468, -580, -2921, -258, 5157], [-28368, -31249, 1334, 14703, 980, -30820, -26788, -20813], [28205, 4860, 13435, -3561, 8027, -29027, -21717, 22572], [-13263, 14110, -9369, -4676, -32701, 25109, -4175, 13663], [-19390, -24014, -650, 27778, -19327, 11593, 3276, 23474]], [ 8, 8 ] ]
Arg_1 = [ [[-24192, -29595, -8867, -24302, -29123, -10582, 6823, 13836], [17680, 29642, -24459, 17783, -30201, -6830, -27293, 17328], [19189, 32388, -13093, -1935, -11653, 14492, 26857, 12659], [18494, -30852, 27704, -14330, 30734, -11546, 0, 21953], [-19919, 10302, 15535, -2632, -9711, 27998, 20971, -2679], [12734, 31826, 13821, -21102, -28374, 4568, -13349, 2406]], [ 6, 8 ] ]
Result = IllegalDimensionSize

Boundaray Feasiable Path4_1:
Self = [ [[-22524]], [ 1, 1 ] ]
Arg_1 = [ [[16458]], [ 1, 1 ] ]
Result = [ [[-38982]], [ 1, 1 ] ]

Boundaray Feasiable Path6_1:
Self = [ [[16225, -14179]], [ 1, 2 ] ]
Arg_1 = [ [[-30727, 14625]], [ 1, 2 ] ]
Result = [ [[46952, -28804]], [ 1, 2 ] ]

Boundaray Feasiable Path9_1:
Self = [ [[-10999, 6945, -9590]], [ 1, 3 ] ]
Arg_1 = [ [[-18499, 4900, -13209]], [ 1, 3 ] ]
Result = [ [[7500, 2045, 3619]], [ 1, 3 ] ]

Boundaray Feasiable Path12_1:
Self = [ [[15312], [22365]], [ 2, 1 ] ]
Arg_1 = [ [[23165], [-17239]], [ 2, 1 ] ]
Result = [ [[-7853], [39604]], [ 2, 1 ] ]

Boundaray Feasiable Path14_1:
Self = [ [[6569, -28674, -21612, 8696]], [ 1, 4 ] ]
Arg_1 = [ [[22462, 7136, 27726, -11228]], [ 1, 4 ] ]
Result = [ [[-15893, -35810, -49338, 19924]], [ 1, 4 ] ]

Boundaray Feasiable Path23_1:
Self = [ [[9667, -10555, -11532, 17287, -31997]], [ 1, 5 ] ]
Arg_1 = [ [[-5420, 8656, 19521, 22590, 3457]], [ 1, 5 ] ]
Result = [ [[15087, -19211, -31053, -5303, -35454]], [ 1, 5 ] ]

Boundaray Feasiable Path32_1:
Self = [ [[-4529, 19214], [-31662, 20169]], [ 2, 2 ] ]
Arg_1 = [ [[-7779, 25853], [19348, -30755]], [ 2, 2 ] ]
Result = [ [[3250, -6639], [-51010, 50924]], [ 2, 2 ] ]

Boundaray Feasiable Path39_1:
Self = [ [[-31497, -21785, -26127, 13009, -30481, 18532]], [ 1, 6 ] ]
Arg_1 = [ [[8326, -2103, 17933, -18255, -19668, -1296]], [ 1, 6 ] ]
Result = [ [[-39823, -19682, -44060, 31264, -10813, 19828]], [ 1, 6 ] ]

Boundaray Feasiable Path44_1:
Self = [ [[18053], [32704], [929]], [ 3, 1 ] ]
Arg_1 = [ [[-3074], [-11428], [20701]], [ 3, 1 ] ]
Result = [ [[21127], [44132], [-19772]], [ 3, 1 ] ]

Boundaray Feasiable Path67_1:
Self = [ [[-25363, -14969, -6535, -25824, -11605, -1700, 15580]], [ 1, 7 ] ]
Arg_1 = [ [[1230, 29864, -30033, -635, -31931, 16583, -9859]], [ 1, 7 ] ]
Result = [ [[-26593, -44833, 23498, -25189, 20326, -18283, 25439]], [ 1, 7 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: TwoDimVarArray, Method: getData, Test Case Number: 1
Boundaray Feasiable Path1_1:
Self = [ [[7850, 23084, -9836, 32303, 19900, -11113, -6338], [1552, -10622, -9393, 14387, 7283, -17052, 29472], [9729, -28452, -32415, 4685, 7599, 9026, 27151], [-23140, -25900, -26809, 19173, -20409, -482, 11140], [-29166, 11459, -23958, 16746, -20011, -10159, -552], [31901, -23914, -29597, 20160, 17129, -22417, 9316], [-8079, 1392, -8882, -25216, -26811, -21181, 25302], [-28530, 24128, -2412, -6903, 9322, -25129, 31042], [-20778, 7785, -30281, -13092, 18233, 95, 22259], [30134, 31108, 21291, 4145, -29126, 15050, -6689]], [ 10, 7 ] ]
Result = [[7850, 23084, -9836, 32303, 19900, -11113, -6338], [1552, -10622, -9393, 14387, 7283, -17052, 29472], [9729, -28452, -32415, 4685, 7599, 9026, 27151], [-23140, -25900, -26809, 19173, -20409, -482, 11140], [-29166, 11459, -23958, 16746, -20011, -10159, -552], [31901, -23914, -29597, 20160, 17129, -22417, 9316], [-8079, 1392, -8882, -25216, -26811, -21181, 25302], [-28530, 24128, -2412, -6903, 9322, -25129, 31042], [-20778, 7785, -30281, -13092, 18233, 95, 22259], [30134, 31108, 21291, 4145, -29126, 15050, -6689]]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

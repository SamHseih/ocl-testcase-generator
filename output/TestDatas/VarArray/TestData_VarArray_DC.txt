Class: VarArray, Method: , Test Case Number: 1
Feasiable Path1:
Invariant Self = [ [-30916, -19717, -10644, -18872, 11346, 13794, 18987, 4883, -25691], [ 9 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: VarArray, Method: VarArray, Test Case Number: 1
Feasiable Path1:
Self = [ [-22121, 13992, 31097, -11677, -23052, 31891, -3322], [ 7 ] ]
Arg_1 = [-22121, 13992, 31097, -11677, -23052, 31891, -3322]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: VarArray, Method: add, Test Case Number: 11
Feasiable Path1:
Self = [ [12048, 28613], [ 2 ] ]
Arg_1 = [ [18168, 16586, -25880, 26932, 24690, -7851], [ 6 ] ]
Result = IllegalDimensionSize

Feasiable Path3:
Self = [ [-21156], [ 1 ] ]
Arg_1 = [ [-3579], [ 1 ] ]
Result = [ [-24735], [ 1 ] ]

Feasiable Path4:
Self = [ [-8971, -3722], [ 2 ] ]
Arg_1 = [ [-5455, -21276], [ 2 ] ]
Result = [ [-14426, -24998], [ 2 ] ]

Feasiable Path5:
Self = [ [-28992, 17422, -11039], [ 3 ] ]
Arg_1 = [ [-19312, 18409, -17057], [ 3 ] ]
Result = [ [-48304, 35831, -28096], [ 3 ] ]

Feasiable Path6:
Self = [ [-13542, -9619, -24483, 7036], [ 4 ] ]
Arg_1 = [ [28353, 18424, 29566, -22754], [ 4 ] ]
Result = [ [14811, 8805, 5083, -15718], [ 4 ] ]

Feasiable Path7:
Self = [ [-14163, 32334, -30353, 24239, -2874], [ 5 ] ]
Arg_1 = [ [28814, -9733, 13424, 15164, -27449], [ 5 ] ]
Result = [ [14651, 22601, -16929, 39403, -30323], [ 5 ] ]

Feasiable Path8:
Self = [ [-18141, -26493, 7685, 10766, 24446, 15221], [ 6 ] ]
Arg_1 = [ [14118, 2335, 3477, 6272, 16365, -11537], [ 6 ] ]
Result = [ [-4023, -24158, 11162, 17038, 40811, 3684], [ 6 ] ]

Feasiable Path9:
Self = [ [25773, -13337, -5115, -2019, 15575, 17872, 24436], [ 7 ] ]
Arg_1 = [ [8080, -31921, -9486, -32498, -29257, 13350, -32119], [ 7 ] ]
Result = [ [33853, -45258, -14601, -34517, -13682, 31222, -7683], [ 7 ] ]

Feasiable Path10:
Self = [ [11226, 3976, -15620, -21155, 29467, -21639, 7477, 24831], [ 8 ] ]
Arg_1 = [ [6126, 14904, 8390, -14045, -21969, -14913, 5961, 3855], [ 8 ] ]
Result = [ [17352, 18880, -7230, -35200, 7498, -36552, 13438, 28686], [ 8 ] ]

Feasiable Path11:
Self = [ [16637, 25395, -28599, -31128, -2552, -24961, 241, 2022, -18822], [ 9 ] ]
Arg_1 = [ [11245, -14979, -21985, 21001, 909, -17202, 27882, 8026, -21104], [ 9 ] ]
Result = [ [27882, 10416, -50584, -10127, -1643, -42163, 28123, 10048, -39926], [ 9 ] ]

Feasiable Path12:
Self = [ [-7827, 30657, 5903, 14691, 25753, 8062, 10769, -314, -9566, -24232], [ 10 ] ]
Arg_1 = [ [-10599, 31467, -24434, 1637, 19223, 14239, 30176, -8080, 1104, 17991], [ 10 ] ]
Result = [ [-18426, 62124, -18531, 16328, 44976, 22301, 40945, -8394, -8462, -6241], [ 10 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: VarArray, Method: sub, Test Case Number: 11
Feasiable Path1:
Self = [ [-29870, 18895, 25227, -15640, 17308, -14137, -13782, 10027, 7996], [ 9 ] ]
Arg_1 = [ [434, -11812, 11419, 19068, -5225, -2862, 18186, -17054, -11830, 11147], [ 10 ] ]
Result = IllegalDimensionSize

Feasiable Path3:
Self = [ [5518], [ 1 ] ]
Arg_1 = [ [-8831], [ 1 ] ]
Result = [ [14349], [ 1 ] ]

Feasiable Path4:
Self = [ [24724, 23872], [ 2 ] ]
Arg_1 = [ [9105, 853], [ 2 ] ]
Result = [ [15619, 23019], [ 2 ] ]

Feasiable Path5:
Self = [ [17042, -26078, 19733], [ 3 ] ]
Arg_1 = [ [8362, -16416, 13471], [ 3 ] ]
Result = [ [8680, -9662, 6262], [ 3 ] ]

Feasiable Path6:
Self = [ [27316, -6393, -14793, 7790], [ 4 ] ]
Arg_1 = [ [29878, 8269, 15730, -24231], [ 4 ] ]
Result = [ [-2562, -14662, -30523, 32021], [ 4 ] ]

Feasiable Path7:
Self = [ [-13712, -1118, 8762, 17229, -27197], [ 5 ] ]
Arg_1 = [ [-1099, -24741, 25251, 17690, -361], [ 5 ] ]
Result = [ [-12613, 23623, -16489, -461, -26836], [ 5 ] ]

Feasiable Path8:
Self = [ [7356, -9952, -31424, -19168, -10921, 15744], [ 6 ] ]
Arg_1 = [ [-17192, -28806, 24744, -11402, -1577, -10039], [ 6 ] ]
Result = [ [24548, 18854, -56168, -7766, -9344, 25783], [ 6 ] ]

Feasiable Path9:
Self = [ [6991, -20452, 22667, -23285, -12024, 5991, -4600], [ 7 ] ]
Arg_1 = [ [17499, 11266, 15940, 22912, 21772, -1836, 21414], [ 7 ] ]
Result = [ [-10508, -31718, 6727, -46197, -33796, 7827, -26014], [ 7 ] ]

Feasiable Path10:
Self = [ [-11033, -506, 32738, -32380, 30104, -25503, 3098, 817], [ 8 ] ]
Arg_1 = [ [-643, 2976, -23569, -22763, -6718, 21994, -31112, -7718], [ 8 ] ]
Result = [ [-10390, -3482, 56307, -9617, 36822, -47497, 34210, 8535], [ 8 ] ]

Feasiable Path11:
Self = [ [4696, 1268, 9311, 13093, 27080, -25867, -10320, 26029, 14675], [ 9 ] ]
Arg_1 = [ [-23543, 23103, 11640, 12870, -21593, -28982, 31667, -28801, -25693], [ 9 ] ]
Result = [ [28239, -21835, -2329, 223, 48673, 3115, -41987, 54830, 40368], [ 9 ] ]

Feasiable Path12:
Self = [ [-8527, -28654, -18698, 22431, 4288, -23427, -13555, 5551, -1994, 31987], [ 10 ] ]
Arg_1 = [ [21562, 12340, -32700, -5623, -5706, -15393, -5756, -29164, -26173, 15905], [ 10 ] ]
Result = [ [-30089, -40994, 14002, 28054, 9994, -8034, -7799, 34715, 24179, 16082], [ 10 ] ]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Class: VarArray, Method: getData, Test Case Number: 1
Feasiable Path1:
Self = [ [-26348, 18033, 904, 26431, 20131, -20548, 19819, 18114], [ 8 ] ]
Result = [-26348, 18033, 904, 26431, 20131, -20548, 19819, 18114]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

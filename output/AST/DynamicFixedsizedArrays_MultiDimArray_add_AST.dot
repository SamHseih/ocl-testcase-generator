digraph AST {
  node [shape=box];
  n65 [label="ContextDecl: node(21) Context: node (33), node (64)", xlabel="(65)"];
  n65 -> n21;
  n65 -> n33;
  n65 -> n64;
  n21 [label="MultiDimArray::add(node (20)) : MultiDimArray", xlabel="(21)"];
  n21 -> n20;
  n33 [label="IllegalDimensionException pre:", xlabel="(33)Boolean"];
  n33 -> n32;
  n64 [label=" post:", xlabel="(64)Boolean"];
  n64 -> n63;
  n20 [label="arg : MultiDimArray", xlabel="(20)MultiDimArray"];
  n32 [label="and", xlabel="(32)Boolean"];
  n32 -> n26;
  n32 -> n31;
  n63 [label="LetExp 
Let node(42), node(62) in node(62)", xlabel="(63)Boolean"];
  n63 -> n42;
  n63 -> n62;
  n26 [label="=", xlabel="(26)Boolean"];
  n26 -> n23;
  n26 -> n25;
  n31 [label="=", xlabel="(31)Boolean"];
  n31 -> n28;
  n31 -> n30;
  n42 [label="length : int = node(41)", xlabel="(42)int"];
  n42 -> n41;
  n62 [label="IterateExp
source=node(47) Iterator=node(48)
Result=node(50) Body=node(61)", xlabel="(62)Boolean"];
  n62 -> n47;
  n62 -> n48;
  n62 -> n50;
  n62 -> n61;
  n23 [label="arg.dimension", xlabel="(23)int"];
  n23 -> n22;
  n25 [label="self.dimension", xlabel="(25)int"];
  n25 -> n24;
  n28 [label="arg.dimensionSizes", xlabel="(28)int[]"];
  n28 -> n27;
  n30 [label="self.dimensionSizes", xlabel="(30)int[]"];
  n30 -> n29;
  n41 [label="IterateExp
source=node(34) Iterator=node(35)
Result=node(37) Body=node(40)", xlabel="(41)int"];
  n41 -> n34;
  n41 -> n35;
  n41 -> n37;
  n41 -> n40;
  n47 [label="Sequence{ node(43) .. node(46) }", xlabel="(47)int"];
  n47 -> n43;
  n47 -> n46;
  n48 [label="index : int", xlabel="(48)int"];
  n50 [label="check : Boolean = node(49)", xlabel="(50)Boolean"];
  n50 -> n49;
  n61 [label="=", xlabel="(61)Boolean"];
  n61 -> n53;
  n61 -> n60;
  n22 [label="arg", xlabel="(22)MultiDimArray"];
  n24 [label="self", xlabel="(24)MultiDimArray"];
  n27 [label="arg", xlabel="(27)MultiDimArray"];
  n29 [label="self", xlabel="(29)MultiDimArray"];
  n34 [label="dimensionSizes", xlabel="(34)int[]"];
  n35 [label="i : int", xlabel="(35)int"];
  n37 [label="acc : int = node(36)", xlabel="(37)int"];
  n37 -> n36;
  n40 [label="*", xlabel="(40)MultiDimArray"];
  n40 -> n38;
  n40 -> n39;
  n43 [label="0", xlabel="(43)int"];
  n46 [label="-", xlabel="(46)int"];
  n46 -> n44;
  n46 -> n45;
  n49 [label="true", xlabel="(49)Boolean"];
  n53 [label="result.elements[index]", xlabel="(53)int"];
  n53 -> n51;
  n53 -> n52;
  n60 [label="+", xlabel="(60)int"];
  n60 -> n56;
  n60 -> n59;
  n36 [label="1", xlabel="(36)int"];
  n38 [label="result", xlabel="(38)MultiDimArray"];
  n39 [label="i", xlabel="(39)int"];
  n44 [label="length", xlabel="(44)int"];
  n45 [label="1", xlabel="(45)int"];
  n51 [label="result", xlabel="(51)MultiDimArray"];
  n52 [label="index", xlabel="(52)int"];
  n56 [label="self.elements[index]", xlabel="(56)int"];
  n56 -> n54;
  n56 -> n55;
  n59 [label="arg.elements[index]", xlabel="(59)int"];
  n59 -> n57;
  n59 -> n58;
  n54 [label="self", xlabel="(54)MultiDimArray"];
  n55 [label="index", xlabel="(55)int"];
  n57 [label="arg", xlabel="(57)MultiDimArray"];
  n58 [label="index", xlabel="(58)int"];
}

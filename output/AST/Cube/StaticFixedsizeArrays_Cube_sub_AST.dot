digraph AST {
  node [shape=box];
  n135 [label="ContextDecl: node(73) Context: node (134)", xlabel="(135)"];
  n135 -> n73;
  n135 -> n134;
  n73 [label="Cube::sub(node (72)) : Cube", xlabel="(73)"];
  n73 -> n72;
  n134 [label=" post:", xlabel="(134)Boolean"];
  n134 -> n133;
  n72 [label="arg : Cube", xlabel="(72)Cube"];
  n133 [label="LetExp 
Let node(79), node(85), node(91), node(132) in node(132)", xlabel="(133)Boolean"];
  n133 -> n79;
  n133 -> n85;
  n133 -> n91;
  n133 -> n132;
  n79 [label="=", xlabel="(79)Boolean"];
  n79 -> n78;
  n79 -> n77;
  n85 [label="=", xlabel="(85)Boolean"];
  n85 -> n84;
  n85 -> n83;
  n91 [label="=", xlabel="(91)Boolean"];
  n91 -> n90;
  n91 -> n89;
  n132 [label="IterateExp
source=node(94) Iterator=node(95)
Result=node(98) Body=node(131)", xlabel="(132)Boolean"];
  n132 -> n94;
  n132 -> n95;
  n132 -> n98;
  n132 -> n131;
  n78 [label="dim1 : int", xlabel="(78)int"];
  n77 [label="arg.data.getDimensionSizes(1)", xlabel="(77)int"];
  n77 -> n75;
  n77 -> n76;
  n84 [label="dim2 : int", xlabel="(84)int"];
  n83 [label="arg.data.getDimensionSizes(2)", xlabel="(83)int"];
  n83 -> n81;
  n83 -> n82;
  n90 [label="dim3 : int", xlabel="(90)int"];
  n89 [label="arg.data.getDimensionSizes(3)", xlabel="(89)int"];
  n89 -> n87;
  n89 -> n88;
  n94 [label="Sequence{ node(92) .. node(93) }", xlabel="(94)int"];
  n94 -> n92;
  n94 -> n93;
  n95 [label="it : int", xlabel="(95)int"];
  n98 [label="=", xlabel="(98)Boolean"];
  n98 -> n97;
  n98 -> n96;
  n131 [label="IterateExp
source=node(101) Iterator=node(102)
Result=node(105) Body=node(130)", xlabel="(131)Boolean"];
  n131 -> n101;
  n131 -> n102;
  n131 -> n105;
  n131 -> n130;
  n75 [label="arg.data", xlabel="(75)int[2][2][2]"];
  n75 -> n74;
  n76 [label="1", xlabel="(76)int"];
  n81 [label="arg.data", xlabel="(81)int[2][2][2]"];
  n81 -> n80;
  n82 [label="2", xlabel="(82)int"];
  n87 [label="arg.data", xlabel="(87)int[2][2][2]"];
  n87 -> n86;
  n88 [label="3", xlabel="(88)int"];
  n92 [label="1", xlabel="(92)int"];
  n93 [label="dim1", xlabel="(93)int"];
  n97 [label="acc : Boolean", xlabel="(97)Boolean"];
  n96 [label="true", xlabel="(96)Boolean"];
  n101 [label="Sequence{ node(99) .. node(100) }", xlabel="(101)int"];
  n101 -> n99;
  n101 -> n100;
  n102 [label="it2 : int", xlabel="(102)int"];
  n105 [label="=", xlabel="(105)Boolean"];
  n105 -> n104;
  n105 -> n103;
  n130 [label="IterateExp
source=node(108) Iterator=node(109)
Result=node(112) Body=node(129)", xlabel="(130)Boolean"];
  n130 -> n108;
  n130 -> n109;
  n130 -> n112;
  n130 -> n129;
  n74 [label="arg", xlabel="(74)Cube"];
  n80 [label="arg", xlabel="(80)Cube"];
  n86 [label="arg", xlabel="(86)Cube"];
  n99 [label="1", xlabel="(99)int"];
  n100 [label="dim2", xlabel="(100)int"];
  n104 [label="acc2 : Boolean", xlabel="(104)Boolean"];
  n103 [label="true", xlabel="(103)Boolean"];
  n108 [label="Sequence{ node(106) .. node(107) }", xlabel="(108)int"];
  n108 -> n106;
  n108 -> n107;
  n109 [label="it3 : int", xlabel="(109)int"];
  n112 [label="=", xlabel="(112)Boolean"];
  n112 -> n111;
  n112 -> n110;
  n129 [label="=", xlabel="(129)Boolean"];
  n129 -> n117;
  n129 -> n128;
  n106 [label="1", xlabel="(106)int"];
  n107 [label="dim3", xlabel="(107)int"];
  n111 [label="acc3 : Boolean", xlabel="(111)Boolean"];
  n110 [label="true", xlabel="(110)Boolean"];
  n117 [label="result.data[it][it2][it3]", xlabel="(117)int"];
  n117 -> n113;
  n117 -> n114;
  n117 -> n115;
  n117 -> n116;
  n128 [label="-", xlabel="(128)int"];
  n128 -> n122;
  n128 -> n127;
  n113 [label="result", xlabel="(113)Cube"];
  n114 [label="it", xlabel="(114)int"];
  n115 [label="it2", xlabel="(115)int"];
  n116 [label="it3", xlabel="(116)int"];
  n122 [label="self.data[it][it2][it3]", xlabel="(122)int"];
  n122 -> n118;
  n122 -> n119;
  n122 -> n120;
  n122 -> n121;
  n127 [label="arg.data[it][it2][it3]", xlabel="(127)int"];
  n127 -> n123;
  n127 -> n124;
  n127 -> n125;
  n127 -> n126;
  n118 [label="self", xlabel="(118)Cube"];
  n119 [label="it", xlabel="(119)int"];
  n120 [label="it2", xlabel="(120)int"];
  n121 [label="it3", xlabel="(121)int"];
  n123 [label="arg", xlabel="(123)Cube"];
  n124 [label="it", xlabel="(124)int"];
  n125 [label="it2", xlabel="(125)int"];
  n126 [label="it3", xlabel="(126)int"];
}

digraph AST {
  node [shape=box];
  n71 [label="ContextDecl: node(25) Context: node (43), node (70)", xlabel="(71)"];
  n71 -> n25;
  n71 -> n43;
  n71 -> n70;
  n25 [label="VarArray::add(node (24)) : VarArray", xlabel="(25)"];
  n25 -> n24;
  n43 [label=" pre:", xlabel="(43)Boolean"];
  n43 -> n42;
  n70 [label=" post:", xlabel="(70)Boolean"];
  n70 -> n69;
  n24 [label="arg : VarArray", xlabel="(24)VarArray"];
  n42 [label="and", xlabel="(42)Boolean"];
  n42 -> n32;
  n42 -> n41;
  n69 [label="LetExp 
Let node(49), node(68) in node(68)", xlabel="(69)Boolean"];
  n69 -> n49;
  n69 -> n68;
  n32 [label="=", xlabel="(32)Boolean"];
  n32 -> n28;
  n32 -> n31;
  n41 [label="=", xlabel="(41)Boolean"];
  n41 -> n36;
  n41 -> n40;
  n49 [label="=", xlabel="(49)Boolean"];
  n49 -> n48;
  n49 -> n47;
  n68 [label="IterateExp
source=node(52) Iterator=node(53)
Result=node(56) Body=node(67)", xlabel="(68)Boolean"];
  n68 -> n52;
  n68 -> n53;
  n68 -> n56;
  n68 -> n67;
  n28 [label="self.data.getDimension()", xlabel="(28)int"];
  n28 -> n27;
  n31 [label="arg.data.getDimension()", xlabel="(31)int"];
  n31 -> n30;
  n36 [label="self.data.getDimensionSizes(1)", xlabel="(36)int"];
  n36 -> n34;
  n36 -> n35;
  n40 [label="arg.data.getDimensionSizes(1)", xlabel="(40)int"];
  n40 -> n38;
  n40 -> n39;
  n48 [label="dim1 : int", xlabel="(48)int"];
  n47 [label="arg.data.getDimensionSizes(1)", xlabel="(47)int"];
  n47 -> n45;
  n47 -> n46;
  n52 [label="Sequence{ node(50) .. node(51) }", xlabel="(52)int"];
  n52 -> n50;
  n52 -> n51;
  n53 [label="it : int", xlabel="(53)int"];
  n56 [label="=", xlabel="(56)Boolean"];
  n56 -> n55;
  n56 -> n54;
  n67 [label="=", xlabel="(67)Boolean"];
  n67 -> n59;
  n67 -> n66;
  n27 [label="self.data", xlabel="(27)int[dim]"];
  n27 -> n26;
  n30 [label="arg.data", xlabel="(30)int[dim]"];
  n30 -> n29;
  n34 [label="self.data", xlabel="(34)int[dim]"];
  n34 -> n33;
  n35 [label="1", xlabel="(35)int"];
  n38 [label="arg.data", xlabel="(38)int[dim]"];
  n38 -> n37;
  n39 [label="1", xlabel="(39)int"];
  n45 [label="arg.data", xlabel="(45)int[dim]"];
  n45 -> n44;
  n46 [label="1", xlabel="(46)int"];
  n50 [label="1", xlabel="(50)int"];
  n51 [label="dim1", xlabel="(51)int"];
  n55 [label="acc : Boolean", xlabel="(55)Boolean"];
  n54 [label="true", xlabel="(54)Boolean"];
  n59 [label="result.data[it]", xlabel="(59)int"];
  n59 -> n57;
  n59 -> n58;
  n66 [label="+", xlabel="(66)int"];
  n66 -> n62;
  n66 -> n65;
  n26 [label="self", xlabel="(26)VarArray"];
  n29 [label="arg", xlabel="(29)VarArray"];
  n33 [label="self", xlabel="(33)VarArray"];
  n37 [label="arg", xlabel="(37)VarArray"];
  n44 [label="arg", xlabel="(44)VarArray"];
  n57 [label="result", xlabel="(57)VarArray"];
  n58 [label="it", xlabel="(58)int"];
  n62 [label="self.data[it]", xlabel="(62)int"];
  n62 -> n60;
  n62 -> n61;
  n65 [label="arg.data[it]", xlabel="(65)int"];
  n65 -> n63;
  n65 -> n64;
  n60 [label="self", xlabel="(60)VarArray"];
  n61 [label="it", xlabel="(61)int"];
  n63 [label="arg", xlabel="(63)VarArray"];
  n64 [label="it", xlabel="(64)int"];
}

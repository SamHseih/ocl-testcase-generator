digraph AST {
  node [shape=box];
  n90 [label="PackageName: tcgen", xlabel="(90)"];
  n90 -> n11;
  n90 -> n30;
  n90 -> n83;
  n90 -> n89;
  n11 [label="ContextDecl: node(0) Context: node (10)", xlabel="(11)"];
  n11 -> n0;
  n11 -> n10;
  n30 [label="ContextDecl: node(13) Context: node (21), node (29)", xlabel="(30)"];
  n30 -> n13;
  n30 -> n21;
  n30 -> n29;
  n83 [label="ContextDecl: node(31) Context: node (82)", xlabel="(83)"];
  n83 -> n31;
  n83 -> n82;
  n89 [label="ContextDecl: node(84) Context: node (88)", xlabel="(89)"];
  n89 -> n84;
  n89 -> n88;
  n0 [label="Grade", xlabel="(0)"];
  n10 [label=" inv:", xlabel="(10)Boolean"];
  n10 -> n9;
  n13 [label="Grade::Grade(node (12))", xlabel="(13)"];
  n13 -> n12;
  n21 [label=" pre:", xlabel="(21)Boolean"];
  n21 -> n20;
  n29 [label=" post:", xlabel="(29)Boolean"];
  n29 -> n28;
  n31 [label="Grade::rating() : String", xlabel="(31)"];
  n82 [label=" post:", xlabel="(82)Boolean"];
  n82 -> n81;
  n84 [label="Grade::getNumber() : int", xlabel="(84)"];
  n88 [label=" post:", xlabel="(88)Boolean"];
  n88 -> n87;
  n9 [label="and", xlabel="(9)Boolean"];
  n9 -> n4;
  n9 -> n8;
  n12 [label="score : int", xlabel="(12)int"];
  n20 [label="and", xlabel="(20)Boolean"];
  n20 -> n16;
  n20 -> n19;
  n28 [label="and", xlabel="(28)Boolean"];
  n28 -> n24;
  n28 -> n27;
  n81 [label="IfExp ConditionNode:(34) thenNode: (37) elseNode: (80)", xlabel="(81)Boolean"];
  n81 -> n34;
  n81 -> n37;
  n81 -> n80;
  n87 [label="=", xlabel="(87)Boolean"];
  n87 -> n85;
  n87 -> n86;
  n4 [label=">=", xlabel="(4)Boolean"];
  n4 -> n2;
  n4 -> n3;
  n8 [label="<=", xlabel="(8)Boolean"];
  n8 -> n6;
  n8 -> n7;
  n16 [label=">=", xlabel="(16)Boolean"];
  n16 -> n14;
  n16 -> n15;
  n19 [label="<=", xlabel="(19)Boolean"];
  n19 -> n17;
  n19 -> n18;
  n24 [label="=", xlabel="(24)Boolean"];
  n24 -> n22;
  n24 -> n23;
  n27 [label="=", xlabel="(27)Boolean"];
  n27 -> n25;
  n27 -> n26;
  n34 [label="<=", xlabel="(34)Boolean"];
  n34 -> n32;
  n34 -> n33;
  n37 [label="=", xlabel="(37)Boolean"];
  n37 -> n35;
  n37 -> n36;
  n80 [label="IfExp ConditionNode:(44) thenNode: (47) elseNode: (79)", xlabel="(80)Boolean"];
  n80 -> n44;
  n80 -> n47;
  n80 -> n79;
  n85 [label="result", xlabel="(85)int"];
  n86 [label="number", xlabel="(86)int"];
  n2 [label="self.number", xlabel="(2)int"];
  n2 -> n1;
  n3 [label="0", xlabel="(3)int"];
  n6 [label="self.number", xlabel="(6)int"];
  n6 -> n5;
  n7 [label="100", xlabel="(7)int"];
  n14 [label="score", xlabel="(14)int"];
  n15 [label="0", xlabel="(15)int"];
  n17 [label="score", xlabel="(17)int"];
  n18 [label="100", xlabel="(18)int"];
  n22 [label="number", xlabel="(22)int"];
  n23 [label="score", xlabel="(23)int"];
  n25 [label="score", xlabel="(25)int"];
  n26 [label="score", xlabel="(26)int"];
  n32 [label="number", xlabel="(32)int"];
  n33 [label="59", xlabel="(33)int"];
  n35 [label="result", xlabel="(35)String"];
  n36 [label="F", xlabel="(36)String"];
  n44 [label="and", xlabel="(44)Boolean"];
  n44 -> n40;
  n44 -> n43;
  n47 [label="=", xlabel="(47)Boolean"];
  n47 -> n45;
  n47 -> n46;
  n79 [label="IfExp ConditionNode:(54) thenNode: (57) elseNode: (78)", xlabel="(79)Boolean"];
  n79 -> n54;
  n79 -> n57;
  n79 -> n78;
  n1 [label="self", xlabel="(1)Grade"];
  n5 [label="self", xlabel="(5)Grade"];
  n40 [label="<=", xlabel="(40)Boolean"];
  n40 -> n38;
  n40 -> n39;
  n43 [label=">=", xlabel="(43)Boolean"];
  n43 -> n41;
  n43 -> n42;
  n45 [label="result", xlabel="(45)String"];
  n46 [label="D", xlabel="(46)String"];
  n54 [label="and", xlabel="(54)Boolean"];
  n54 -> n50;
  n54 -> n53;
  n57 [label="=", xlabel="(57)Boolean"];
  n57 -> n55;
  n57 -> n56;
  n78 [label="IfExp ConditionNode:(64) thenNode: (67) elseNode: (77)", xlabel="(78)Boolean"];
  n78 -> n64;
  n78 -> n67;
  n78 -> n77;
  n38 [label="number", xlabel="(38)int"];
  n39 [label="69", xlabel="(39)int"];
  n41 [label="number", xlabel="(41)int"];
  n42 [label="60", xlabel="(42)int"];
  n50 [label=">=", xlabel="(50)Boolean"];
  n50 -> n48;
  n50 -> n49;
  n53 [label="<=", xlabel="(53)Boolean"];
  n53 -> n51;
  n53 -> n52;
  n55 [label="result", xlabel="(55)String"];
  n56 [label="C", xlabel="(56)String"];
  n64 [label="and", xlabel="(64)Boolean"];
  n64 -> n60;
  n64 -> n63;
  n67 [label="=", xlabel="(67)Boolean"];
  n67 -> n65;
  n67 -> n66;
  n77 [label="IfExp ConditionNode:(70) thenNode: (73) elseNode: (76)", xlabel="(77)Boolean"];
  n77 -> n70;
  n77 -> n73;
  n77 -> n76;
  n48 [label="number", xlabel="(48)int"];
  n49 [label="70", xlabel="(49)int"];
  n51 [label="number", xlabel="(51)int"];
  n52 [label="79", xlabel="(52)int"];
  n60 [label=">=", xlabel="(60)Boolean"];
  n60 -> n58;
  n60 -> n59;
  n63 [label="<=", xlabel="(63)Boolean"];
  n63 -> n61;
  n63 -> n62;
  n65 [label="result", xlabel="(65)String"];
  n66 [label="B", xlabel="(66)String"];
  n70 [label=">=", xlabel="(70)Boolean"];
  n70 -> n68;
  n70 -> n69;
  n73 [label="=", xlabel="(73)Boolean"];
  n73 -> n71;
  n73 -> n72;
  n76 [label="=", xlabel="(76)Boolean"];
  n76 -> n74;
  n76 -> n75;
  n58 [label="number", xlabel="(58)int"];
  n59 [label="80", xlabel="(59)int"];
  n61 [label="number", xlabel="(61)int"];
  n62 [label="89", xlabel="(62)int"];
  n68 [label="number", xlabel="(68)int"];
  n69 [label="90", xlabel="(69)int"];
  n71 [label="result", xlabel="(71)String"];
  n72 [label="A", xlabel="(72)String"];
  n74 [label="result", xlabel="(74)String"];
  n75 [label="B", xlabel="(75)String"];
}
